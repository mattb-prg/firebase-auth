{"code":"/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __rest } from \"tslib\";\r\nimport { getAccountInfo } from '../../api/account_management/account';\r\nimport { _assert } from '../util/assert';\r\nimport { _logoutIfInvalidated } from './invalidation';\r\nimport { UserMetadata } from './user_metadata';\r\nimport { getModularInstance } from '@firebase/util';\r\nexport async function _reloadWithoutSaving(user) {\r\n    var _a;\r\n    const auth = user.auth;\r\n    const idToken = await user.getIdToken();\r\n    const response = await _logoutIfInvalidated(user, getAccountInfo(auth, { idToken }));\r\n    _assert(response === null || response === void 0 ? void 0 : response.users.length, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    const coreAccount = response.users[0];\r\n    user._notifyReloadListener(coreAccount);\r\n    const newProviderData = ((_a = coreAccount.providerUserInfo) === null || _a === void 0 ? void 0 : _a.length)\r\n        ? extractProviderData(coreAccount.providerUserInfo)\r\n        : [];\r\n    const providerData = mergeProviderData(user.providerData, newProviderData);\r\n    // Preserves the non-nonymous status of the stored user, even if no more\r\n    // credentials (federated or email/password) are linked to the user. If\r\n    // the user was previously anonymous, then use provider data to update.\r\n    // On the other hand, if it was not anonymous before, it should never be\r\n    // considered anonymous now.\r\n    const oldIsAnonymous = user.isAnonymous;\r\n    const newIsAnonymous = !(user.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);\r\n    const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\r\n    const updates = {\r\n        uid: coreAccount.localId,\r\n        displayName: coreAccount.displayName || null,\r\n        photoURL: coreAccount.photoUrl || null,\r\n        email: coreAccount.email || null,\r\n        emailVerified: coreAccount.emailVerified || false,\r\n        phoneNumber: coreAccount.phoneNumber || null,\r\n        tenantId: coreAccount.tenantId || null,\r\n        providerData,\r\n        metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\r\n        isAnonymous\r\n    };\r\n    Object.assign(user, updates);\r\n}\r\n/**\r\n * Reloads user account data, if signed in.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nexport async function reload(user) {\r\n    const userInternal = getModularInstance(user);\r\n    await _reloadWithoutSaving(userInternal);\r\n    // Even though the current user hasn't changed, update\r\n    // current user will trigger a persistence update w/ the\r\n    // new info.\r\n    await userInternal.auth._persistUserIfCurrent(userInternal);\r\n    userInternal.auth._notifyListenersIfCurrent(userInternal);\r\n}\r\nfunction mergeProviderData(original, newData) {\r\n    const deduped = original.filter(o => !newData.some(n => n.providerId === o.providerId));\r\n    return [...deduped, ...newData];\r\n}\r\nfunction extractProviderData(providers) {\r\n    return providers.map((_a) => {\r\n        var { providerId } = _a, provider = __rest(_a, [\"providerId\"]);\r\n        return {\r\n            providerId,\r\n            uid: provider.rawId || '',\r\n            displayName: provider.displayName || null,\r\n            email: provider.email || null,\r\n            phoneNumber: provider.phoneNumber || null,\r\n            photoURL: provider.photoUrl || null\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=reload.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/account_management/account.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/invalidation.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/user_metadata.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"reload.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/user/reload.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/user/reload.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { User } from '../../model/public_types';\r\nimport { UserInternal } from '../../model/user';\r\nexport declare function _reloadWithoutSaving(user: UserInternal): Promise<void>;\r\n/**\r\n * Reloads user account data, if signed in.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nexport declare function reload(user: User): Promise<void>;\r\n"}}

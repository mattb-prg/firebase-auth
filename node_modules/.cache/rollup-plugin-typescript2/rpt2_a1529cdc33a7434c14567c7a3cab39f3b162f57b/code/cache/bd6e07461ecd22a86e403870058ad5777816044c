{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { _addTidIfNecessary, _performApiRequest } from '../index';\r\nexport async function resetPassword(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:resetPassword\" /* Endpoint.RESET_PASSWORD */, _addTidIfNecessary(auth, request));\r\n}\r\nexport async function updateEmailPassword(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request);\r\n}\r\nexport async function applyActionCode(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, _addTidIfNecessary(auth, request));\r\n}\r\n//# sourceMappingURL=email_and_password.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/account_management/mfa.ts"],"map":"{\"version\":3,\"file\":\"email_and_password.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/api/account_management/email_and_password.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAIH,OAAO,EAGL,kBAAkB,EAClB,kBAAkB,EACnB,MAAM,UAAU,CAAC;AAiBlB,MAAM,CAAC,KAAK,UAAU,aAAa,CACjC,IAAU,EACV,OAA6B;IAE7B,OAAO,kBAAkB,CACvB,IAAI,4FAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,CAAC;AACJ,CAAC;AAUD,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACvC,IAAU,EACV,OAAmC;IAEnC,OAAO,kBAAkB,CAGvB,IAAI,uFAA8C,OAAO,CAAC,CAAC;AAC/D,CAAC;AASD,MAAM,CAAC,KAAK,UAAU,eAAe,CACnC,IAAU,EACV,OAA+B;IAE/B,OAAO,kBAAkB,CACvB,IAAI,uFAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,CAAC;AACJ,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/api/account_management/email_and_password.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\r\nimport { IdTokenResponse } from '../../model/id_token';\r\nimport { MfaEnrollment } from './mfa';\r\nexport interface ResetPasswordRequest {\r\n    oobCode: string;\r\n    newPassword?: string;\r\n    tenantId?: string;\r\n}\r\nexport interface ResetPasswordResponse {\r\n    email: string;\r\n    newEmail?: string;\r\n    requestType?: ActionCodeOperation;\r\n    mfaInfo?: MfaEnrollment;\r\n}\r\nexport declare function resetPassword(auth: Auth, request: ResetPasswordRequest): Promise<ResetPasswordResponse>;\r\nexport interface UpdateEmailPasswordRequest {\r\n    idToken: string;\r\n    returnSecureToken?: boolean;\r\n    email?: string;\r\n    password?: string;\r\n}\r\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {\r\n}\r\nexport declare function updateEmailPassword(auth: Auth, request: UpdateEmailPasswordRequest): Promise<UpdateEmailPasswordResponse>;\r\nexport interface ApplyActionCodeRequest {\r\n    oobCode: string;\r\n    tenantId?: string;\r\n}\r\nexport interface ApplyActionCodeResponse {\r\n}\r\nexport declare function applyActionCode(auth: Auth, request: ApplyActionCodeRequest): Promise<ApplyActionCodeResponse>;\r\n"}}

{"code":"/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport class AuthMiddlewareQueue {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.queue = [];\r\n    }\r\n    pushCallback(callback, onAbort) {\r\n        // The callback could be sync or async. Wrap it into a\r\n        // function that is always async.\r\n        const wrappedCallback = (user) => new Promise((resolve, reject) => {\r\n            try {\r\n                const result = callback(user);\r\n                // Either resolve with existing promise or wrap a non-promise\r\n                // return value into a promise.\r\n                resolve(result);\r\n            }\r\n            catch (e) {\r\n                // Sync callback throws.\r\n                reject(e);\r\n            }\r\n        });\r\n        // Attach the onAbort if present\r\n        wrappedCallback.onAbort = onAbort;\r\n        this.queue.push(wrappedCallback);\r\n        const index = this.queue.length - 1;\r\n        return () => {\r\n            // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\r\n            // indexing of other elements.\r\n            this.queue[index] = () => Promise.resolve();\r\n        };\r\n    }\r\n    async runMiddleware(nextUser) {\r\n        if (this.auth.currentUser === nextUser) {\r\n            return;\r\n        }\r\n        // While running the middleware, build a temporary stack of onAbort\r\n        // callbacks to call if one middleware callback rejects.\r\n        const onAbortStack = [];\r\n        try {\r\n            for (const beforeStateCallback of this.queue) {\r\n                await beforeStateCallback(nextUser);\r\n                // Only push the onAbort if the callback succeeds\r\n                if (beforeStateCallback.onAbort) {\r\n                    onAbortStack.push(beforeStateCallback.onAbort);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Run all onAbort, with separate try/catch to ignore any errors and\r\n            // continue\r\n            onAbortStack.reverse();\r\n            for (const onAbort of onAbortStack) {\r\n                try {\r\n                    onAbort();\r\n                }\r\n                catch (_) {\r\n                    /* swallow error */\r\n                }\r\n            }\r\n            throw this.auth._errorFactory.create(\"login-blocked\" /* AuthErrorCode.LOGIN_BLOCKED */, {\r\n                originalMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=middleware.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts"],"map":"{\"version\":3,\"file\":\"middleware.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/auth/middleware.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAWH,MAAM,OAAO,mBAAmB;IAG9B,YAA6B,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QAF9B,UAAK,GAAsB,EAAE,CAAC;IAEG,CAAC;IAEnD,YAAY,CACV,QAAqD,EACrD,OAAoB;QAEpB,sDAAsD;QACtD,iCAAiC;QACjC,MAAM,eAAe,GAAoB,CACvC,IAAiB,EACF,EAAE,CACjB,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9B,IAAI;gBACF,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC9B,6DAA6D;gBAC7D,+BAA+B;gBAC/B,OAAO,CAAC,MAAM,CAAC,CAAC;aACjB;YAAC,OAAO,CAAC,EAAE;gBACV,wBAAwB;gBACxB,MAAM,CAAC,CAAC,CAAC,CAAC;aACX;QACH,CAAC,CAAC,CAAC;QACL,gCAAgC;QAChC,eAAe,CAAC,OAAO,GAAG,OAAO,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEjC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACpC,OAAO,GAAG,EAAE;YACV,gFAAgF;YAChF,8BAA8B;YAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC9C,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,QAAqB;QACvC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;YACtC,OAAO;SACR;QAED,mEAAmE;QACnE,wDAAwD;QAExD,MAAM,YAAY,GAAsB,EAAE,CAAC;QAC3C,IAAI;YACF,KAAK,MAAM,mBAAmB,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC5C,MAAM,mBAAmB,CAAC,QAAQ,CAAC,CAAC;gBAEpC,iDAAiD;gBACjD,IAAI,mBAAmB,CAAC,OAAO,EAAE;oBAC/B,YAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;iBAChD;aACF;SACF;QAAC,OAAO,CAAC,EAAE;YACV,oEAAoE;YACpE,WAAW;YACX,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,KAAK,MAAM,OAAO,IAAI,YAAY,EAAE;gBAClC,IAAI;oBACF,OAAO,EAAE,CAAC;iBACX;gBAAC,OAAO,CAAC,EAAE;oBACV,mBAAmB;iBACpB;aACF;YAED,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,oDAA8B;gBAChE,eAAe,EAAG,CAAW,aAAX,CAAC,uBAAD,CAAC,CAAY,OAAO;aACvC,CAAC,CAAC;SACJ;IACH,CAAC;CACF\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/auth/middleware.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { Unsubscribe, User } from '../../model/public_types';\r\nexport declare class AuthMiddlewareQueue {\r\n    private readonly auth;\r\n    private readonly queue;\r\n    constructor(auth: AuthInternal);\r\n    pushCallback(callback: (user: User | null) => void | Promise<void>, onAbort?: () => void): Unsubscribe;\r\n    runMiddleware(nextUser: User | null): Promise<void>;\r\n}\r\n"}}

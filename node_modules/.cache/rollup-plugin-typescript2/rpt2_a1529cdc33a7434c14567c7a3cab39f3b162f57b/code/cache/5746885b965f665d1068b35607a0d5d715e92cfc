{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { _performApiRequest, _addTidIfNecessary } from '../index';\r\nexport function startSignInPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:start\" /* Endpoint.START_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\r\n}\r\nexport function finalizeSignInPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:finalize\" /* Endpoint.FINALIZE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\r\n}\r\nexport function finalizeSignInTotpMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:finalize\" /* Endpoint.FINALIZE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\r\n}\r\n//# sourceMappingURL=mfa.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/account_management/mfa.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/idp.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/sms.ts"],"map":"{\"version\":3,\"file\":\"mfa.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/api/authentication/mfa.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EACL,kBAAkB,EAGlB,kBAAkB,EACnB,MAAM,UAAU,CAAC;AAsClB,MAAM,UAAU,mBAAmB,CACjC,IAAU,EACV,OAAmC;IAEnC,OAAO,kBAAkB,CAIvB,IAAI,iGAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,CAAC;AACJ,CAAC;AAsBD,MAAM,UAAU,sBAAsB,CACpC,IAAU,EACV,OAAsC;IAEtC,OAAO,kBAAkB,CAIvB,IAAI,uGAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,qBAAqB,CACnC,IAAU,EACV,OAAqC;IAErC,OAAO,kBAAkB,CAIvB,IAAI,uGAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,CAAC;AACJ,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/api/authentication/mfa.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Auth } from '../../model/public_types';\r\nimport { IdTokenResponse } from '../../model/id_token';\r\nimport { MfaEnrollment } from '../account_management/mfa';\r\nimport { SignInWithIdpResponse } from './idp';\r\nimport { SignInWithPhoneNumberRequest, SignInWithPhoneNumberResponse } from './sms';\r\nexport interface FinalizeMfaResponse {\r\n    idToken: string;\r\n    refreshToken: string;\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport interface IdTokenMfaResponse extends IdTokenResponse {\r\n    mfaPendingCredential?: string;\r\n    mfaInfo?: MfaEnrollment[];\r\n}\r\nexport interface StartPhoneMfaSignInRequest {\r\n    mfaPendingCredential: string;\r\n    mfaEnrollmentId: string;\r\n    phoneSignInInfo: {\r\n        recaptchaToken: string;\r\n    };\r\n    tenantId?: string;\r\n}\r\nexport interface StartPhoneMfaSignInResponse {\r\n    phoneResponseInfo: {\r\n        sessionInfo: string;\r\n    };\r\n}\r\nexport declare function startSignInPhoneMfa(auth: Auth, request: StartPhoneMfaSignInRequest): Promise<StartPhoneMfaSignInResponse>;\r\nexport interface FinalizePhoneMfaSignInRequest {\r\n    mfaPendingCredential: string;\r\n    phoneVerificationInfo: SignInWithPhoneNumberRequest;\r\n    tenantId?: string;\r\n}\r\nexport interface FinalizeTotpMfaSignInRequest {\r\n    mfaPendingCredential: string;\r\n    totpVerificationInfo: {\r\n        verificationCode: string;\r\n    };\r\n    tenantId?: string;\r\n    mfaEnrollmentId: string;\r\n}\r\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {\r\n}\r\nexport interface FinalizeTotpMfaSignInResponse extends FinalizeMfaResponse {\r\n}\r\nexport declare function finalizeSignInPhoneMfa(auth: Auth, request: FinalizePhoneMfaSignInRequest): Promise<FinalizePhoneMfaSignInResponse>;\r\nexport declare function finalizeSignInTotpMfa(auth: Auth, request: FinalizeTotpMfaSignInRequest): Promise<FinalizeTotpMfaSignInResponse>;\r\n/**\r\n * @internal\r\n */\r\nexport declare type PhoneOrOauthTokenResponse = SignInWithPhoneNumberResponse | SignInWithIdpResponse | IdTokenResponse;\r\n"}}

{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { UserImpl } from './user_impl';\r\nexport class UserCredentialImpl {\r\n    constructor(params) {\r\n        this.user = params.user;\r\n        this.providerId = params.providerId;\r\n        this._tokenResponse = params._tokenResponse;\r\n        this.operationType = params.operationType;\r\n    }\r\n    static async _fromIdTokenResponse(auth, operationType, idTokenResponse, isAnonymous = false) {\r\n        const user = await UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous);\r\n        const providerId = providerIdForResponse(idTokenResponse);\r\n        const userCred = new UserCredentialImpl({\r\n            user,\r\n            providerId,\r\n            _tokenResponse: idTokenResponse,\r\n            operationType\r\n        });\r\n        return userCred;\r\n    }\r\n    static async _forOperation(user, operationType, response) {\r\n        await user._updateTokensIfNecessary(response, /* reload */ true);\r\n        const providerId = providerIdForResponse(response);\r\n        return new UserCredentialImpl({\r\n            user,\r\n            providerId,\r\n            _tokenResponse: response,\r\n            operationType\r\n        });\r\n    }\r\n}\r\nfunction providerIdForResponse(response) {\r\n    if (response.providerId) {\r\n        return response.providerId;\r\n    }\r\n    if ('phoneNumber' in response) {\r\n        return \"phone\" /* ProviderId.PHONE */;\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=user_credential_impl.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/mfa.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/user_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/enums.ts"],"map":"{\"version\":3,\"file\":\"user_credential_impl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/user/user_credential_impl.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAKH,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAWvC,MAAM,OAAO,kBAAkB;IAQ7B,YAAY,MAA4B;QACtC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAC/B,IAAkB,EAClB,aAA4B,EAC5B,eAAgC,EAChC,cAAuB,KAAK;QAE5B,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,oBAAoB,CAC9C,IAAI,EACJ,eAAe,EACf,WAAW,CACZ,CAAC;QACF,MAAM,UAAU,GAAG,qBAAqB,CAAC,eAAe,CAAC,CAAC;QAC1D,MAAM,QAAQ,GAAG,IAAI,kBAAkB,CAAC;YACtC,IAAI;YACJ,UAAU;YACV,cAAc,EAAE,eAAe;YAC/B,aAAa;SACd,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,aAAa,CACxB,IAAkB,EAClB,aAA4B,EAC5B,QAAmC;QAEnC,MAAM,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;QACjE,MAAM,UAAU,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACnD,OAAO,IAAI,kBAAkB,CAAC;YAC5B,IAAI;YACJ,UAAU;YACV,cAAc,EAAE,QAAQ;YACxB,aAAa;SACd,CAAC,CAAC;IACL,CAAC;CACF;AAED,SAAS,qBAAqB,CAC5B,QAAyB;IAEzB,IAAI,QAAQ,CAAC,UAAU,EAAE;QACvB,OAAO,QAAQ,CAAC,UAAU,CAAC;KAC5B;IAED,IAAI,aAAa,IAAI,QAAQ,EAAE;QAC7B,sCAAwB;KACzB;IAED,OAAO,IAAI,CAAC;AACd,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/user/user_credential_impl.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\r\nimport { IdTokenResponse } from '../../model/id_token';\r\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { OperationType, ProviderId } from '../../model/enums';\r\ninterface UserCredentialParams {\r\n    readonly user: UserInternal;\r\n    readonly providerId: ProviderId | string | null;\r\n    readonly _tokenResponse?: PhoneOrOauthTokenResponse;\r\n    readonly operationType: OperationType;\r\n}\r\nexport declare class UserCredentialImpl implements UserCredentialInternal, UserCredentialParams {\r\n    readonly user: UserInternal;\r\n    readonly providerId: ProviderId | string | null;\r\n    readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\r\n    readonly operationType: OperationType;\r\n    constructor(params: UserCredentialParams);\r\n    static _fromIdTokenResponse(auth: AuthInternal, operationType: OperationType, idTokenResponse: IdTokenResponse, isAnonymous?: boolean): Promise<UserCredentialInternal>;\r\n    static _forOperation(user: UserInternal, operationType: OperationType, response: PhoneOrOauthTokenResponse): Promise<UserCredentialImpl>;\r\n}\r\nexport {};\r\n"}}

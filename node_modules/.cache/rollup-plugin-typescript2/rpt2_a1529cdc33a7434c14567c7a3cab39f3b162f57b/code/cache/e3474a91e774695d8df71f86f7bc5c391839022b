{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport class MultiFactorSessionImpl {\r\n    constructor(type, credential, user) {\r\n        this.type = type;\r\n        this.credential = credential;\r\n        this.user = user;\r\n    }\r\n    static _fromIdtoken(idToken, user) {\r\n        return new MultiFactorSessionImpl(\"enroll\" /* MultiFactorSessionType.ENROLL */, idToken, user);\r\n    }\r\n    static _fromMfaPendingCredential(mfaPendingCredential) {\r\n        return new MultiFactorSessionImpl(\"signin\" /* MultiFactorSessionType.SIGN_IN */, mfaPendingCredential);\r\n    }\r\n    toJSON() {\r\n        const key = this.type === \"enroll\" /* MultiFactorSessionType.ENROLL */\r\n            ? 'idToken'\r\n            : 'pendingCredential';\r\n        return {\r\n            multiFactorSession: {\r\n                [key]: this.credential\r\n            }\r\n        };\r\n    }\r\n    static fromJSON(obj) {\r\n        var _a, _b;\r\n        if (obj === null || obj === void 0 ? void 0 : obj.multiFactorSession) {\r\n            if ((_a = obj.multiFactorSession) === null || _a === void 0 ? void 0 : _a.pendingCredential) {\r\n                return MultiFactorSessionImpl._fromMfaPendingCredential(obj.multiFactorSession.pendingCredential);\r\n            }\r\n            else if ((_b = obj.multiFactorSession) === null || _b === void 0 ? void 0 : _b.idToken) {\r\n                return MultiFactorSessionImpl._fromIdtoken(obj.multiFactorSession.idToken);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=mfa_session.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts"],"map":"{\"version\":3,\"file\":\"mfa_session.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/mfa/mfa_session.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAiBH,MAAM,OAAO,sBAAsB;IACjC,YACW,IAA4B,EAC5B,UAAkB,EAClB,IAAmB;QAFnB,SAAI,GAAJ,IAAI,CAAwB;QAC5B,eAAU,GAAV,UAAU,CAAQ;QAClB,SAAI,GAAJ,IAAI,CAAe;IAC3B,CAAC;IAEJ,MAAM,CAAC,YAAY,CACjB,OAAe,EACf,IAAmB;QAEnB,OAAO,IAAI,sBAAsB,+CAE/B,OAAO,EACP,IAAI,CACL,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,yBAAyB,CAC9B,oBAA4B;QAE5B,OAAO,IAAI,sBAAsB,gDAE/B,oBAAoB,CACrB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,MAAM,GAAG,GACP,IAAI,CAAC,IAAI,iDAAkC;YACzC,CAAC,CAAC,SAAS;YACX,CAAC,CAAC,mBAAmB,CAAC;QAC1B,OAAO;YACL,kBAAkB,EAAE;gBAClB,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU;aACvB;SACF,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,GAA0C;;QAE1C,IAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,kBAAkB,EAAE;YAC3B,IAAI,MAAA,GAAG,CAAC,kBAAkB,0CAAE,iBAAiB,EAAE;gBAC7C,OAAO,sBAAsB,CAAC,yBAAyB,CACrD,GAAG,CAAC,kBAAkB,CAAC,iBAAiB,CACzC,CAAC;aACH;iBAAM,IAAI,MAAA,GAAG,CAAC,kBAAkB,0CAAE,OAAO,EAAE;gBAC1C,OAAO,sBAAsB,CAAC,YAAY,CACxC,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAC/B,CAAC;aACH;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/mfa/mfa_session.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { UserInternal } from '../model/user';\r\nimport { MultiFactorSession } from '../model/public_types';\r\nexport declare const enum MultiFactorSessionType {\r\n    ENROLL = \"enroll\",\r\n    SIGN_IN = \"signin\"\r\n}\r\ninterface SerializedMultiFactorSession {\r\n    multiFactorSession: {\r\n        idToken?: string;\r\n        pendingCredential?: string;\r\n    };\r\n}\r\nexport declare class MultiFactorSessionImpl implements MultiFactorSession {\r\n    readonly type: MultiFactorSessionType;\r\n    readonly credential: string;\r\n    readonly user?: UserInternal | undefined;\r\n    private constructor();\r\n    static _fromIdtoken(idToken: string, user?: UserInternal): MultiFactorSessionImpl;\r\n    static _fromMfaPendingCredential(mfaPendingCredential: string): MultiFactorSessionImpl;\r\n    toJSON(): SerializedMultiFactorSession;\r\n    static fromJSON(obj: Partial<SerializedMultiFactorSession>): MultiFactorSessionImpl | null;\r\n}\r\nexport {};\r\n"}}

{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { UserImpl } from './user_impl';\r\nvar UserCredentialImpl = /** @class */ (function () {\r\n    function UserCredentialImpl(params) {\r\n        this.user = params.user;\r\n        this.providerId = params.providerId;\r\n        this._tokenResponse = params._tokenResponse;\r\n        this.operationType = params.operationType;\r\n    }\r\n    UserCredentialImpl._fromIdTokenResponse = function (auth, operationType, idTokenResponse, isAnonymous) {\r\n        if (isAnonymous === void 0) { isAnonymous = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var user, providerId, userCred;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous)];\r\n                    case 1:\r\n                        user = _a.sent();\r\n                        providerId = providerIdForResponse(idTokenResponse);\r\n                        userCred = new UserCredentialImpl({\r\n                            user: user,\r\n                            providerId: providerId,\r\n                            _tokenResponse: idTokenResponse,\r\n                            operationType: operationType\r\n                        });\r\n                        return [2 /*return*/, userCred];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    UserCredentialImpl._forOperation = function (user, operationType, response) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var providerId;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, user._updateTokensIfNecessary(response, /* reload */ true)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        providerId = providerIdForResponse(response);\r\n                        return [2 /*return*/, new UserCredentialImpl({\r\n                                user: user,\r\n                                providerId: providerId,\r\n                                _tokenResponse: response,\r\n                                operationType: operationType\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return UserCredentialImpl;\r\n}());\r\nexport { UserCredentialImpl };\r\nfunction providerIdForResponse(response) {\r\n    if (response.providerId) {\r\n        return response.providerId;\r\n    }\r\n    if ('phoneNumber' in response) {\r\n        return \"phone\" /* ProviderId.PHONE */;\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=user_credential_impl.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/mfa.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/user_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/enums.ts"],"map":"{\"version\":3,\"file\":\"user_credential_impl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/user/user_credential_impl.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAKH,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAWvC;IAQE,4BAAY,MAA4B;QACtC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;IAC5C,CAAC;IAEY,uCAAoB,GAAjC,UACE,IAAkB,EAClB,aAA4B,EAC5B,eAAgC,EAChC,WAA4B;QAA5B,4BAAA,EAAA,mBAA4B;;;;;4BAEf,qBAAM,QAAQ,CAAC,oBAAoB,CAC9C,IAAI,EACJ,eAAe,EACf,WAAW,CACZ,EAAA;;wBAJK,IAAI,GAAG,SAIZ;wBACK,UAAU,GAAG,qBAAqB,CAAC,eAAe,CAAC,CAAC;wBACpD,QAAQ,GAAG,IAAI,kBAAkB,CAAC;4BACtC,IAAI,MAAA;4BACJ,UAAU,YAAA;4BACV,cAAc,EAAE,eAAe;4BAC/B,aAAa,eAAA;yBACd,CAAC,CAAC;wBACH,sBAAO,QAAQ,EAAC;;;;KACjB;IAEY,gCAAa,GAA1B,UACE,IAAkB,EAClB,aAA4B,EAC5B,QAAmC;;;;;4BAEnC,qBAAM,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,YAAY,CAAC,IAAI,CAAC,EAAA;;wBAAhE,SAAgE,CAAC;wBAC3D,UAAU,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;wBACnD,sBAAO,IAAI,kBAAkB,CAAC;gCAC5B,IAAI,MAAA;gCACJ,UAAU,YAAA;gCACV,cAAc,EAAE,QAAQ;gCACxB,aAAa,eAAA;6BACd,CAAC,EAAC;;;;KACJ;IACH,yBAAC;AAAD,CAAC,AAlDD,IAkDC;;AAED,SAAS,qBAAqB,CAC5B,QAAyB;IAEzB,IAAI,QAAQ,CAAC,UAAU,EAAE;QACvB,OAAO,QAAQ,CAAC,UAAU,CAAC;KAC5B;IAED,IAAI,aAAa,IAAI,QAAQ,EAAE;QAC7B,sCAAwB;KACzB;IAED,OAAO,IAAI,CAAC;AACd,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/user/user_credential_impl.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\r\nimport { IdTokenResponse } from '../../model/id_token';\r\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { OperationType, ProviderId } from '../../model/enums';\r\ninterface UserCredentialParams {\r\n    readonly user: UserInternal;\r\n    readonly providerId: ProviderId | string | null;\r\n    readonly _tokenResponse?: PhoneOrOauthTokenResponse;\r\n    readonly operationType: OperationType;\r\n}\r\nexport declare class UserCredentialImpl implements UserCredentialInternal, UserCredentialParams {\r\n    readonly user: UserInternal;\r\n    readonly providerId: ProviderId | string | null;\r\n    readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\r\n    readonly operationType: OperationType;\r\n    constructor(params: UserCredentialParams);\r\n    static _fromIdTokenResponse(auth: AuthInternal, operationType: OperationType, idTokenResponse: IdTokenResponse, isAnonymous?: boolean): Promise<UserCredentialInternal>;\r\n    static _forOperation(user: UserInternal, operationType: OperationType, response: PhoneOrOauthTokenResponse): Promise<UserCredentialImpl>;\r\n}\r\nexport {};\r\n"}}

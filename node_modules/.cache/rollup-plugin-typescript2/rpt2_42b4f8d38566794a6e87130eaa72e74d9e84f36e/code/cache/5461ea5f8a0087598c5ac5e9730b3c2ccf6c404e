{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { signInWithCustomToken as getIdTokenResponse } from '../../api/authentication/custom_token';\r\nimport { UserCredentialImpl } from '../user/user_credential_impl';\r\nimport { _castAuth } from '../auth/auth_impl';\r\n/**\r\n * Asynchronously signs in using a custom token.\r\n *\r\n * @remarks\r\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\r\n * be generated by an auth backend using the\r\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\r\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\r\n *\r\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param customToken - The custom token to sign in with.\r\n *\r\n * @public\r\n */\r\nexport function signInWithCustomToken(auth, customToken) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authInternal, response, cred;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    authInternal = _castAuth(auth);\r\n                    return [4 /*yield*/, getIdTokenResponse(authInternal, {\r\n                            token: customToken,\r\n                            returnSecureToken: true\r\n                        })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response)];\r\n                case 2:\r\n                    cred = _a.sent();\r\n                    return [4 /*yield*/, authInternal._updateCurrentUser(cred.user)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, cred];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=custom_token.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/custom_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/user_credential_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/auth_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/enums.ts"],"map":"{\"version\":3,\"file\":\"custom_token.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/strategies/custom_token.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAIH,OAAO,EAAE,qBAAqB,IAAI,kBAAkB,EAAE,MAAM,uCAAuC,CAAC;AAEpG,OAAO,EAAE,kBAAkB,EAAE,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAG9C;;;;;;;;;;;;;;;GAeG;AACH,MAAM,UAAgB,qBAAqB,CACzC,IAAU,EACV,WAAmB;;;;;;oBAEb,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;oBACH,qBAAM,kBAAkB,CAAC,YAAY,EAAE;4BACvE,KAAK,EAAE,WAAW;4BAClB,iBAAiB,EAAE,IAAI;yBACxB,CAAC,EAAA;;oBAHI,QAAQ,GAAoB,SAGhC;oBACW,qBAAM,kBAAkB,CAAC,oBAAoB,CACxD,YAAY,wCAEZ,QAAQ,CACT,EAAA;;oBAJK,IAAI,GAAG,SAIZ;oBACD,qBAAM,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAA;;oBAAhD,SAAgD,CAAC;oBACjD,sBAAO,IAAI,EAAC;;;;CACb\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/strategies/custom_token.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Auth, UserCredential } from '../../model/public_types';\r\n/**\r\n * Asynchronously signs in using a custom token.\r\n *\r\n * @remarks\r\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\r\n * be generated by an auth backend using the\r\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\r\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\r\n *\r\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param customToken - The custom token to sign in with.\r\n *\r\n * @public\r\n */\r\nexport declare function signInWithCustomToken(auth: Auth, customToken: string): Promise<UserCredential>;\r\n"}}

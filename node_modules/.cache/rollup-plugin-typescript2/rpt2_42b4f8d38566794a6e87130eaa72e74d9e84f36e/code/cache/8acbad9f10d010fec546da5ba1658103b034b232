{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { _castAuth } from '../../core/auth/auth_impl';\r\nimport { _assert, debugAssert, _createError, _assertInstanceOf } from '../../core/util/assert';\r\nimport { Delay } from '../../core/util/delay';\r\nimport { _generateEventId } from '../../core/util/event_id';\r\nimport { _withDefaultResolver } from '../../core/util/resolver';\r\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\r\nimport { FederatedAuthProvider } from '../../core/providers/federated';\r\nimport { getModularInstance } from '@firebase/util';\r\nexport var _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\r\n/**\r\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\r\n *\r\n * @remarks\r\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\r\n * unsuccessful, returns an error object containing additional information about the error.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Facebook Access Token.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nexport function signInWithPopup(auth, provider, resolver) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authInternal, resolverInternal, action;\r\n        return __generator(this, function (_a) {\r\n            authInternal = _castAuth(auth);\r\n            _assertInstanceOf(auth, provider, FederatedAuthProvider);\r\n            resolverInternal = _withDefaultResolver(authInternal, resolver);\r\n            action = new PopupOperation(authInternal, \"signInViaPopup\" /* AuthEventType.SIGN_IN_VIA_POPUP */, provider, resolverInternal);\r\n            return [2 /*return*/, action.executeNotNull()];\r\n        });\r\n    });\r\n}\r\n/**\r\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\r\n * OAuth flow.\r\n *\r\n * @remarks\r\n * If the reauthentication is successful, the returned result will contain the user and the\r\n * provider's credential.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n * // Reauthenticate using a popup.\r\n * await reauthenticateWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nexport function reauthenticateWithPopup(user, provider, resolver) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var userInternal, resolverInternal, action;\r\n        return __generator(this, function (_a) {\r\n            userInternal = getModularInstance(user);\r\n            _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n            resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n            action = new PopupOperation(userInternal.auth, \"reauthViaPopup\" /* AuthEventType.REAUTH_VIA_POPUP */, provider, resolverInternal, userInternal);\r\n            return [2 /*return*/, action.executeNotNull()];\r\n        });\r\n    });\r\n}\r\n/**\r\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\r\n *\r\n * @remarks\r\n * If the linking is successful, the returned result will contain the user and the provider's credential.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using some other provider.\r\n * const result = await signInWithEmailAndPassword(auth, email, password);\r\n * // Link using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * await linkWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nexport function linkWithPopup(user, provider, resolver) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var userInternal, resolverInternal, action;\r\n        return __generator(this, function (_a) {\r\n            userInternal = getModularInstance(user);\r\n            _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n            resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n            action = new PopupOperation(userInternal.auth, \"linkViaPopup\" /* AuthEventType.LINK_VIA_POPUP */, provider, resolverInternal, userInternal);\r\n            return [2 /*return*/, action.executeNotNull()];\r\n        });\r\n    });\r\n}\r\n/**\r\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\r\n * events\r\n *\r\n */\r\nvar PopupOperation = /** @class */ (function (_super) {\r\n    __extends(PopupOperation, _super);\r\n    function PopupOperation(auth, filter, provider, resolver, user) {\r\n        var _this = _super.call(this, auth, filter, resolver, user) || this;\r\n        _this.provider = provider;\r\n        _this.authWindow = null;\r\n        _this.pollId = null;\r\n        if (PopupOperation.currentPopupAction) {\r\n            PopupOperation.currentPopupAction.cancel();\r\n        }\r\n        PopupOperation.currentPopupAction = _this;\r\n        return _this;\r\n    }\r\n    PopupOperation.prototype.executeNotNull = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.execute()];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        _assert(result, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PopupOperation.prototype.onExecution = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var eventId, _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        debugAssert(this.filter.length === 1, 'Popup operations only handle one event');\r\n                        eventId = _generateEventId();\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.resolver._openPopup(this.auth, this.provider, this.filter[0], // There's always one, see constructor\r\n                            eventId)];\r\n                    case 1:\r\n                        _a.authWindow = _b.sent();\r\n                        this.authWindow.associatedEvent = eventId;\r\n                        // Check for web storage support and origin validation _after_ the popup is\r\n                        // loaded. These operations are slow (~1 second or so) Rather than\r\n                        // waiting on them before opening the window, optimistically open the popup\r\n                        // and check for storage support at the same time. If storage support is\r\n                        // not available, this will cause the whole thing to reject properly. It\r\n                        // will also close the popup, but since the promise has already rejected,\r\n                        // the popup closed by user poll will reject into the void.\r\n                        this.resolver._originValidation(this.auth).catch(function (e) {\r\n                            _this.reject(e);\r\n                        });\r\n                        this.resolver._isIframeWebStorageSupported(this.auth, function (isSupported) {\r\n                            if (!isSupported) {\r\n                                _this.reject(_createError(_this.auth, \"web-storage-unsupported\" /* AuthErrorCode.WEB_STORAGE_UNSUPPORTED */));\r\n                            }\r\n                        });\r\n                        // Handle user closure. Notice this does *not* use await\r\n                        this.pollUserCancellation();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(PopupOperation.prototype, \"eventId\", {\r\n        get: function () {\r\n            var _a;\r\n            return ((_a = this.authWindow) === null || _a === void 0 ? void 0 : _a.associatedEvent) || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    PopupOperation.prototype.cancel = function () {\r\n        this.reject(_createError(this.auth, \"cancelled-popup-request\" /* AuthErrorCode.EXPIRED_POPUP_REQUEST */));\r\n    };\r\n    PopupOperation.prototype.cleanUp = function () {\r\n        if (this.authWindow) {\r\n            this.authWindow.close();\r\n        }\r\n        if (this.pollId) {\r\n            window.clearTimeout(this.pollId);\r\n        }\r\n        this.authWindow = null;\r\n        this.pollId = null;\r\n        PopupOperation.currentPopupAction = null;\r\n    };\r\n    PopupOperation.prototype.pollUserCancellation = function () {\r\n        var _this = this;\r\n        var poll = function () {\r\n            var _a, _b;\r\n            if ((_b = (_a = _this.authWindow) === null || _a === void 0 ? void 0 : _a.window) === null || _b === void 0 ? void 0 : _b.closed) {\r\n                // Make sure that there is sufficient time for whatever action to\r\n                // complete. The window could have closed but the sign in network\r\n                // call could still be in flight. This is specifically true for\r\n                // Firefox or if the opener is in an iframe, in which case the oauth\r\n                // helper closes the popup.\r\n                _this.pollId = window.setTimeout(function () {\r\n                    _this.pollId = null;\r\n                    _this.reject(_createError(_this.auth, \"popup-closed-by-user\" /* AuthErrorCode.POPUP_CLOSED_BY_USER */));\r\n                }, 8000 /* _Timeout.AUTH_EVENT */);\r\n                return;\r\n            }\r\n            _this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\r\n        };\r\n        poll();\r\n    };\r\n    // Only one popup is ever shown at once. The lifecycle of the current popup\r\n    // can be managed / cancelled by the constructor.\r\n    PopupOperation.currentPopupAction = null;\r\n    return PopupOperation;\r\n}(AbstractPopupRedirectOperation));\r\n//# sourceMappingURL=popup.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/auth_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/delay.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/event_id.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/popup_redirect.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/resolver.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/util/popup.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/strategies/abstract_popup_redirect_operation.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/providers/federated.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"popup.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/platform_browser/strategies/popup.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/platform_browser/strategies/popup.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Auth, AuthProvider, PopupRedirectResolver, User, UserCredential } from '../../model/public_types';\r\nimport { Delay } from '../../core/util/delay';\r\nexport declare const enum _Timeout {\r\n    AUTH_EVENT = 8000\r\n}\r\nexport declare const _POLL_WINDOW_CLOSE_TIMEOUT: Delay;\r\n/**\r\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\r\n *\r\n * @remarks\r\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\r\n * unsuccessful, returns an error object containing additional information about the error.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Facebook Access Token.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nexport declare function signInWithPopup(auth: Auth, provider: AuthProvider, resolver?: PopupRedirectResolver): Promise<UserCredential>;\r\n/**\r\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\r\n * OAuth flow.\r\n *\r\n * @remarks\r\n * If the reauthentication is successful, the returned result will contain the user and the\r\n * provider's credential.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n * // Reauthenticate using a popup.\r\n * await reauthenticateWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nexport declare function reauthenticateWithPopup(user: User, provider: AuthProvider, resolver?: PopupRedirectResolver): Promise<UserCredential>;\r\n/**\r\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\r\n *\r\n * @remarks\r\n * If the linking is successful, the returned result will contain the user and the provider's credential.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using some other provider.\r\n * const result = await signInWithEmailAndPassword(auth, email, password);\r\n * // Link using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * await linkWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nexport declare function linkWithPopup(user: User, provider: AuthProvider, resolver?: PopupRedirectResolver): Promise<UserCredential>;\r\n"}}

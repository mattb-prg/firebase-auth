{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { querystringDecode } from '@firebase/util';\r\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\r\nimport { _persistenceKeyName } from '../../core/persistence/persistence_user_manager';\r\nimport { _createError } from '../../core/util/assert';\r\nimport { _getInstance } from '../../core/util/instantiator';\r\nimport { browserLocalPersistence } from '../../platform_browser/persistence/local_storage';\r\nvar SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nvar CordovaAuthEventManager = /** @class */ (function (_super) {\r\n    __extends(CordovaAuthEventManager, _super);\r\n    function CordovaAuthEventManager() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.passiveListeners = new Set();\r\n        _this.initPromise = new Promise(function (resolve) {\r\n            _this.resolveInialized = resolve;\r\n        });\r\n        return _this;\r\n    }\r\n    CordovaAuthEventManager.prototype.addPassiveListener = function (cb) {\r\n        this.passiveListeners.add(cb);\r\n    };\r\n    CordovaAuthEventManager.prototype.removePassiveListener = function (cb) {\r\n        this.passiveListeners.delete(cb);\r\n    };\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    CordovaAuthEventManager.prototype.resetRedirect = function () {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    };\r\n    /** Override the onEvent method */\r\n    CordovaAuthEventManager.prototype.onEvent = function (event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(function (cb) { return cb(event); });\r\n        return _super.prototype.onEvent.call(this, event);\r\n    };\r\n    CordovaAuthEventManager.prototype.initialized = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.initPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CordovaAuthEventManager;\r\n}(AuthEventManager));\r\nexport { CordovaAuthEventManager };\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nexport function _generateNewEvent(auth, type, eventId) {\r\n    if (eventId === void 0) { eventId = null; }\r\n    return {\r\n        type: type,\r\n        eventId: eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\r\nexport function _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nexport function _getAndRemoveEvent(auth) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var event;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, storage()._get(persistenceKey(auth))];\r\n                case 1:\r\n                    event = (_a.sent());\r\n                    if (!event) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, storage()._remove(persistenceKey(auth))];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/, event];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    var callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        var params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        var errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        var code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        var error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error: error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    var chars = [];\r\n    var allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (var i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        var idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nexport function _getDeepLinkFromCallback(url) {\r\n    var params = searchParamsOrEmpty(url);\r\n    var link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    var doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    var iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    var iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    var _a = url.split('?'), _ = _a[0], rest = _a.slice(1);\r\n    return querystringDecode(rest.join('?'));\r\n}\r\n//# sourceMappingURL=events.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/auth_event_manager.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/persistence/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/persistence/persistence_user_manager.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/instantiator.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/popup_redirect.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/persistence/local_storage.ts"],"map":"{\"version\":3,\"file\":\"events.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/platform_cordova/popup_redirect/events.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/platform_cordova/popup_redirect/events.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { AuthEvent, AuthEventType } from '../../model/popup_redirect';\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nexport declare class CordovaAuthEventManager extends AuthEventManager {\r\n    private readonly passiveListeners;\r\n    private resolveInialized;\r\n    private initPromise;\r\n    addPassiveListener(cb: (e: AuthEvent) => void): void;\r\n    removePassiveListener(cb: (e: AuthEvent) => void): void;\r\n    resetRedirect(): void;\r\n    /** Override the onEvent method */\r\n    onEvent(event: AuthEvent): boolean;\r\n    initialized(): Promise<void>;\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nexport declare function _generateNewEvent(auth: AuthInternal, type: AuthEventType, eventId?: string | null): AuthEvent;\r\nexport declare function _savePartialEvent(auth: AuthInternal, event: AuthEvent): Promise<void>;\r\nexport declare function _getAndRemoveEvent(auth: AuthInternal): Promise<AuthEvent | null>;\r\nexport declare function _eventFromPartialAndUrl(partialEvent: AuthEvent, url: string): AuthEvent | null;\r\nexport declare function _getDeepLinkFromCallback(url: string): string;\r\n"}}

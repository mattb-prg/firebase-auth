{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\r\n *\r\n * This class is not meant to be instantiated directly.\r\n *\r\n * @public\r\n */\r\nvar FederatedAuthProvider = /** @class */ (function () {\r\n    /**\r\n     * Constructor for generic OAuth providers.\r\n     *\r\n     * @param providerId - Provider for which credentials should be generated.\r\n     */\r\n    function FederatedAuthProvider(providerId) {\r\n        this.providerId = providerId;\r\n        /** @internal */\r\n        this.defaultLanguageCode = null;\r\n        /** @internal */\r\n        this.customParameters = {};\r\n    }\r\n    /**\r\n     * Set the language gode.\r\n     *\r\n     * @param languageCode - language code\r\n     */\r\n    FederatedAuthProvider.prototype.setDefaultLanguage = function (languageCode) {\r\n        this.defaultLanguageCode = languageCode;\r\n    };\r\n    /**\r\n     * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\r\n     * operations.\r\n     *\r\n     * @remarks\r\n     * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\r\n     * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\r\n     *\r\n     * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\r\n     */\r\n    FederatedAuthProvider.prototype.setCustomParameters = function (customOAuthParameters) {\r\n        this.customParameters = customOAuthParameters;\r\n        return this;\r\n    };\r\n    /**\r\n     * Retrieve the current list of {@link CustomParameters}.\r\n     */\r\n    FederatedAuthProvider.prototype.getCustomParameters = function () {\r\n        return this.customParameters;\r\n    };\r\n    return FederatedAuthProvider;\r\n}());\r\nexport { FederatedAuthProvider };\r\n//# sourceMappingURL=federated.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts"],"map":"{\"version\":3,\"file\":\"federated.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/providers/federated.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAWH;;;;;;GAMG;AACH;IAME;;;;OAIG;IACH,+BAAqB,UAAkB;QAAlB,eAAU,GAAV,UAAU,CAAQ;QAVvC,gBAAgB;QAChB,wBAAmB,GAAkB,IAAI,CAAC;QAC1C,gBAAgB;QACR,qBAAgB,GAAqB,EAAE,CAAC;IAON,CAAC;IAE3C;;;;OAIG;IACH,kDAAkB,GAAlB,UAAmB,YAA2B;QAC5C,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;IAC1C,CAAC;IAED;;;;;;;;;OASG;IACH,mDAAmB,GAAnB,UAAoB,qBAAuC;QACzD,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,mDAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IACH,4BAAC;AAAD,CAAC,AA3CD,IA2CC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/providers/federated.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { AuthProvider } from '../../model/public_types';\r\n/**\r\n * Map of OAuth Custom Parameters.\r\n *\r\n * @public\r\n */\r\nexport declare type CustomParameters = Record<string, string>;\r\n/**\r\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\r\n *\r\n * This class is not meant to be instantiated directly.\r\n *\r\n * @public\r\n */\r\nexport declare abstract class FederatedAuthProvider implements AuthProvider {\r\n    readonly providerId: string;\r\n    /** @internal */\r\n    defaultLanguageCode: string | null;\r\n    /** @internal */\r\n    private customParameters;\r\n    /**\r\n     * Constructor for generic OAuth providers.\r\n     *\r\n     * @param providerId - Provider for which credentials should be generated.\r\n     */\r\n    constructor(providerId: string);\r\n    /**\r\n     * Set the language gode.\r\n     *\r\n     * @param languageCode - language code\r\n     */\r\n    setDefaultLanguage(languageCode: string | null): void;\r\n    /**\r\n     * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\r\n     * operations.\r\n     *\r\n     * @remarks\r\n     * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\r\n     * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\r\n     *\r\n     * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\r\n     */\r\n    setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider;\r\n    /**\r\n     * Retrieve the current list of {@link CustomParameters}.\r\n     */\r\n    getCustomParameters(): CustomParameters;\r\n}\r\n"}}

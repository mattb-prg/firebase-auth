{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { querystring } from '@firebase/util';\r\nimport { _assert, _createError } from '../../core/util/assert';\r\nimport { Delay } from '../../core/util/delay';\r\nimport { _window } from '../auth_window';\r\nimport * as jsHelpers from '../load_js';\r\nimport { isV2 } from './recaptcha';\r\nimport { MockReCaptcha } from './recaptcha_mock';\r\n// ReCaptcha will load using the same callback, so the callback function needs\r\n// to be kept around\r\nexport var _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\r\nvar NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\r\nvar RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\r\n/**\r\n * Loader for the GReCaptcha library. There should only ever be one of this.\r\n */\r\nvar ReCaptchaLoaderImpl = /** @class */ (function () {\r\n    function ReCaptchaLoaderImpl() {\r\n        var _a;\r\n        this.hostLanguage = '';\r\n        this.counter = 0;\r\n        /**\r\n         * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\r\n         * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\r\n         * `window.grecaptcha.render()` will not. Another load will add it.\r\n         */\r\n        this.librarySeparatelyLoaded = !!((_a = _window().grecaptcha) === null || _a === void 0 ? void 0 : _a.render);\r\n    }\r\n    ReCaptchaLoaderImpl.prototype.load = function (auth, hl) {\r\n        var _this = this;\r\n        if (hl === void 0) { hl = ''; }\r\n        _assert(isHostLanguageValid(hl), auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\r\n            return Promise.resolve(_window().grecaptcha);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var networkTimeout = _window().setTimeout(function () {\r\n                reject(_createError(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */));\r\n            }, NETWORK_TIMEOUT_DELAY.get());\r\n            _window()[_JSLOAD_CALLBACK] = function () {\r\n                _window().clearTimeout(networkTimeout);\r\n                delete _window()[_JSLOAD_CALLBACK];\r\n                var recaptcha = _window().grecaptcha;\r\n                if (!recaptcha || !isV2(recaptcha)) {\r\n                    reject(_createError(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */));\r\n                    return;\r\n                }\r\n                // Wrap the greptcha render function so that we know if the developer has\r\n                // called it separately\r\n                var render = recaptcha.render;\r\n                recaptcha.render = function (container, params) {\r\n                    var widgetId = render(container, params);\r\n                    _this.counter++;\r\n                    return widgetId;\r\n                };\r\n                _this.hostLanguage = hl;\r\n                resolve(recaptcha);\r\n            };\r\n            var url = \"\".concat(RECAPTCHA_BASE, \"?\").concat(querystring({\r\n                onload: _JSLOAD_CALLBACK,\r\n                render: 'explicit',\r\n                hl: hl\r\n            }));\r\n            jsHelpers._loadJS(url).catch(function () {\r\n                clearTimeout(networkTimeout);\r\n                reject(_createError(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */));\r\n            });\r\n        });\r\n    };\r\n    ReCaptchaLoaderImpl.prototype.clearedOneInstance = function () {\r\n        this.counter--;\r\n    };\r\n    ReCaptchaLoaderImpl.prototype.shouldResolveImmediately = function (hl) {\r\n        var _a;\r\n        // We can resolve immediately if:\r\n        //   â€¢ grecaptcha is already defined AND (\r\n        //     1. the requested language codes are the same OR\r\n        //     2. there exists already a ReCaptcha on the page\r\n        //     3. the library was already loaded by the app\r\n        // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\r\n        // that are already in the page\r\n        return (!!((_a = _window().grecaptcha) === null || _a === void 0 ? void 0 : _a.render) &&\r\n            (hl === this.hostLanguage ||\r\n                this.counter > 0 ||\r\n                this.librarySeparatelyLoaded));\r\n    };\r\n    return ReCaptchaLoaderImpl;\r\n}());\r\nexport { ReCaptchaLoaderImpl };\r\nfunction isHostLanguageValid(hl) {\r\n    return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\r\n}\r\nvar MockReCaptchaLoaderImpl = /** @class */ (function () {\r\n    function MockReCaptchaLoaderImpl() {\r\n    }\r\n    MockReCaptchaLoaderImpl.prototype.load = function (auth) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new MockReCaptcha(auth)];\r\n            });\r\n        });\r\n    };\r\n    MockReCaptchaLoaderImpl.prototype.clearedOneInstance = function () { };\r\n    return MockReCaptchaLoaderImpl;\r\n}());\r\nexport { MockReCaptchaLoaderImpl };\r\n//# sourceMappingURL=recaptcha_loader.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/delay.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/auth_window.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/load_js.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/recaptcha/recaptcha.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/recaptcha/recaptcha_mock.ts"],"map":"{\"version\":3,\"file\":\"recaptcha_loader.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/platform_browser/recaptcha/recaptcha_loader.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/platform_browser/recaptcha/recaptcha_loader.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { Recaptcha } from './recaptcha';\r\nexport declare const _JSLOAD_CALLBACK: string;\r\n/**\r\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\r\n * it references AuthInternal which has a circular dependency with UserInternal.\r\n *\r\n * @internal\r\n */\r\nexport interface ReCaptchaLoader {\r\n    load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\r\n    clearedOneInstance(): void;\r\n}\r\n/**\r\n * Loader for the GReCaptcha library. There should only ever be one of this.\r\n */\r\nexport declare class ReCaptchaLoaderImpl implements ReCaptchaLoader {\r\n    private hostLanguage;\r\n    private counter;\r\n    /**\r\n     * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\r\n     * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\r\n     * `window.grecaptcha.render()` will not. Another load will add it.\r\n     */\r\n    private readonly librarySeparatelyLoaded;\r\n    load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\r\n    clearedOneInstance(): void;\r\n    private shouldResolveImmediately;\r\n}\r\nexport declare class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\r\n    load(auth: AuthInternal): Promise<Recaptcha>;\r\n    clearedOneInstance(): void;\r\n}\r\n"}}

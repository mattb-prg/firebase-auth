{"code":"/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport function _cordovaWindow() {\r\n    return window;\r\n}\r\n//# sourceMappingURL=plugins.js.map","references":[],"map":"{\"version\":3,\"file\":\"plugins.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/platform_cordova/plugins.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAoCH,MAAM,UAAU,cAAc;IAC5B,OAAO,MAAkC,CAAC;AAC5C,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/platform_cordova/plugins.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport interface CordovaWindow extends Window {\r\n    cordova: {\r\n        plugins: {\r\n            browsertab: {\r\n                isAvailable(cb: (available: boolean) => void): void;\r\n                openUrl(url: string): void;\r\n                close(): void;\r\n            };\r\n        };\r\n        InAppBrowser: {\r\n            open(url: string, target: string, options: string): InAppBrowserRef;\r\n        };\r\n    };\r\n    universalLinks: {\r\n        subscribe(n: null, cb: (event: Record<string, string> | null) => void): void;\r\n    };\r\n    BuildInfo: {\r\n        readonly packageName: string;\r\n        readonly displayName: string;\r\n    };\r\n    handleOpenURL(url: string): void;\r\n}\r\nexport interface InAppBrowserRef {\r\n    close?: () => void;\r\n}\r\nexport declare function _cordovaWindow(): CordovaWindow;\r\n"}}

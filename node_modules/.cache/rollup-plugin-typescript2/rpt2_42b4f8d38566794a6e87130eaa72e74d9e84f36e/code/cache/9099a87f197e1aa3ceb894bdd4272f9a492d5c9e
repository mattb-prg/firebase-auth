{"code":"/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { signInWithIdp } from '../../api/authentication/idp';\r\nimport { AuthCredential } from '../credentials';\r\nimport { _link as _linkUser } from '../user/link_unlink';\r\nimport { _reauthenticate } from '../user/reauthenticate';\r\nimport { _assert } from '../util/assert';\r\nimport { _signInWithCredential } from './credential';\r\nvar IdpCredential = /** @class */ (function (_super) {\r\n    __extends(IdpCredential, _super);\r\n    function IdpCredential(params) {\r\n        var _this = _super.call(this, \"custom\" /* ProviderId.CUSTOM */, \"custom\" /* ProviderId.CUSTOM */) || this;\r\n        _this.params = params;\r\n        return _this;\r\n    }\r\n    IdpCredential.prototype._getIdTokenResponse = function (auth) {\r\n        return signInWithIdp(auth, this._buildIdpRequest());\r\n    };\r\n    IdpCredential.prototype._linkToIdToken = function (auth, idToken) {\r\n        return signInWithIdp(auth, this._buildIdpRequest(idToken));\r\n    };\r\n    IdpCredential.prototype._getReauthenticationResolver = function (auth) {\r\n        return signInWithIdp(auth, this._buildIdpRequest());\r\n    };\r\n    IdpCredential.prototype._buildIdpRequest = function (idToken) {\r\n        var request = {\r\n            requestUri: this.params.requestUri,\r\n            sessionId: this.params.sessionId,\r\n            postBody: this.params.postBody,\r\n            tenantId: this.params.tenantId,\r\n            pendingToken: this.params.pendingToken,\r\n            returnSecureToken: true,\r\n            returnIdpCredential: true\r\n        };\r\n        if (idToken) {\r\n            request.idToken = idToken;\r\n        }\r\n        return request;\r\n    };\r\n    return IdpCredential;\r\n}(AuthCredential));\r\nexport function _signIn(params) {\r\n    return _signInWithCredential(params.auth, new IdpCredential(params), params.bypassAuthState);\r\n}\r\nexport function _reauth(params) {\r\n    var auth = params.auth, user = params.user;\r\n    _assert(user, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    return _reauthenticate(user, new IdpCredential(params), params.bypassAuthState);\r\n}\r\nexport function _link(params) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var auth, user;\r\n        return __generator(this, function (_a) {\r\n            auth = params.auth, user = params.user;\r\n            _assert(user, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n            return [2 /*return*/, _linkUser(user, new IdpCredential(params), params.bypassAuthState)];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=idp.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/idp.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/mfa.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/credentials/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/link_unlink.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/reauthenticate.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/strategies/credential.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/enums.ts"],"map":"{\"version\":3,\"file\":\"idp.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/strategies/idp.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,OAAO,EACL,aAAa,EAEd,MAAM,8BAA8B,CAAC;AAKtC,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,KAAK,IAAI,SAAS,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AACzC,OAAO,EAAE,qBAAqB,EAAE,MAAM,cAAc,CAAC;AAmBrD;IAA4B,iCAAc;IACxC,uBAAqB,MAAqB;QAA1C,YACE,qFAA2C,SAC5C;QAFoB,YAAM,GAAN,MAAM,CAAe;;IAE1C,CAAC;IAED,2CAAmB,GAAnB,UAAoB,IAAkB;QACpC,OAAO,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,sCAAc,GAAd,UACE,IAAkB,EAClB,OAAe;QAEf,OAAO,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,oDAA4B,GAA5B,UAA6B,IAAkB;QAC7C,OAAO,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;IACtD,CAAC;IAEO,wCAAgB,GAAxB,UAAyB,OAAgB;QACvC,IAAM,OAAO,GAAyB;YACpC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;YAClC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;YAChC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;YAC9B,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;YAC9B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;YACtC,iBAAiB,EAAE,IAAI;YACvB,mBAAmB,EAAE,IAAI;SAC1B,CAAC;QAEF,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;SAC3B;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IACH,oBAAC;AAAD,CAAC,AArCD,CAA4B,cAAc,GAqCzC;AAED,MAAM,UAAU,OAAO,CACrB,MAAqB;IAErB,OAAO,qBAAqB,CAC1B,MAAM,CAAC,IAAI,EACX,IAAI,aAAa,CAAC,MAAM,CAAC,EACzB,MAAM,CAAC,eAAe,CACY,CAAC;AACvC,CAAC;AAED,MAAM,UAAU,OAAO,CACrB,MAAqB;IAEb,IAAA,IAAI,GAAW,MAAM,KAAjB,EAAE,IAAI,GAAK,MAAM,KAAX,CAAY;IAC9B,OAAO,CAAC,IAAI,EAAE,IAAI,sDAA+B,CAAC;IAClD,OAAO,eAAe,CACpB,IAAI,EACJ,IAAI,aAAa,CAAC,MAAM,CAAC,EACzB,MAAM,CAAC,eAAe,CACvB,CAAC;AACJ,CAAC;AAED,MAAM,UAAgB,KAAK,CACzB,MAAqB;;;;YAEb,IAAI,GAAW,MAAM,KAAjB,EAAE,IAAI,GAAK,MAAM,KAAX,CAAY;YAC9B,OAAO,CAAC,IAAI,EAAE,IAAI,sDAA+B,CAAC;YAClD,sBAAO,SAAS,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,eAAe,CAAC,EAAC;;;CAC3E\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/strategies/idp.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\r\nexport interface IdpTaskParams {\r\n    auth: AuthInternal;\r\n    requestUri: string;\r\n    sessionId?: string;\r\n    tenantId?: string;\r\n    postBody?: string;\r\n    pendingToken?: string;\r\n    user?: UserInternal;\r\n    bypassAuthState?: boolean;\r\n}\r\nexport declare type IdpTask = (params: IdpTaskParams) => Promise<UserCredentialInternal>;\r\nexport declare function _signIn(params: IdpTaskParams): Promise<UserCredentialInternal>;\r\nexport declare function _reauth(params: IdpTaskParams): Promise<UserCredentialInternal>;\r\nexport declare function _link(params: IdpTaskParams): Promise<UserCredentialInternal>;\r\n"}}

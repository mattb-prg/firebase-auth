{"code":"/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\r\nimport { _assert } from '../util/assert';\r\nimport { providerDataAsNames } from '../util/providers';\r\nimport { _logoutIfInvalidated } from './invalidation';\r\nimport { _reloadWithoutSaving } from './reload';\r\nimport { UserCredentialImpl } from './user_credential_impl';\r\nimport { getModularInstance } from '@firebase/util';\r\n/**\r\n * Unlinks a provider from a user account.\r\n *\r\n * @param user - The user.\r\n * @param providerId - The provider to unlink.\r\n *\r\n * @public\r\n */\r\nexport function unlink(user, providerId) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var userInternal, providerUserInfo, _a, _b, providersLeft;\r\n        var _c;\r\n        return __generator(this, function (_d) {\r\n            switch (_d.label) {\r\n                case 0:\r\n                    userInternal = getModularInstance(user);\r\n                    return [4 /*yield*/, _assertLinkedStatus(true, userInternal, providerId)];\r\n                case 1:\r\n                    _d.sent();\r\n                    _a = deleteLinkedAccounts;\r\n                    _b = [userInternal.auth];\r\n                    _c = {};\r\n                    return [4 /*yield*/, userInternal.getIdToken()];\r\n                case 2: return [4 /*yield*/, _a.apply(void 0, _b.concat([(_c.idToken = _d.sent(),\r\n                            _c.deleteProvider = [providerId],\r\n                            _c)]))];\r\n                case 3:\r\n                    providerUserInfo = (_d.sent()).providerUserInfo;\r\n                    providersLeft = providerDataAsNames(providerUserInfo || []);\r\n                    userInternal.providerData = userInternal.providerData.filter(function (pd) {\r\n                        return providersLeft.has(pd.providerId);\r\n                    });\r\n                    if (!providersLeft.has(\"phone\" /* ProviderId.PHONE */)) {\r\n                        userInternal.phoneNumber = null;\r\n                    }\r\n                    return [4 /*yield*/, userInternal.auth._persistUserIfCurrent(userInternal)];\r\n                case 4:\r\n                    _d.sent();\r\n                    return [2 /*return*/, userInternal];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function _link(user, credential, bypassAuthState) {\r\n    if (bypassAuthState === void 0) { bypassAuthState = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var response, _a, _b, _c, _d, _e;\r\n        return __generator(this, function (_f) {\r\n            switch (_f.label) {\r\n                case 0:\r\n                    _a = _logoutIfInvalidated;\r\n                    _b = [user];\r\n                    _d = (_c = credential)._linkToIdToken;\r\n                    _e = [user.auth];\r\n                    return [4 /*yield*/, user.getIdToken()];\r\n                case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([_d.apply(_c, _e.concat([_f.sent()])),\r\n                        bypassAuthState]))];\r\n                case 2:\r\n                    response = _f.sent();\r\n                    return [2 /*return*/, UserCredentialImpl._forOperation(user, \"link\" /* OperationType.LINK */, response)];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function _assertLinkedStatus(expected, user, provider) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var providerIds, code;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, _reloadWithoutSaving(user)];\r\n                case 1:\r\n                    _a.sent();\r\n                    providerIds = providerDataAsNames(user.providerData);\r\n                    code = expected === false\r\n                        ? \"provider-already-linked\" /* AuthErrorCode.PROVIDER_ALREADY_LINKED */\r\n                        : \"no-such-provider\" /* AuthErrorCode.NO_SUCH_PROVIDER */;\r\n                    _assert(providerIds.has(provider) === expected, user.auth, code);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=link_unlink.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/account_management/account.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/credentials/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/providers.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/invalidation.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/reload.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/user_credential_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/enums.ts"],"map":"{\"version\":3,\"file\":\"link_unlink.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/user/link_unlink.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAIH,OAAO,EAAE,oBAAoB,EAAE,MAAM,sCAAsC,CAAC;AAI5E,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AACzC,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AACtD,OAAO,EAAE,oBAAoB,EAAE,MAAM,UAAU,CAAC;AAChD,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC5D,OAAO,EAAE,kBAAkB,EAAE,MAAM,gBAAgB,CAAC;AAGpD;;;;;;;GAOG;AACH,MAAM,UAAgB,MAAM,CAAC,IAAU,EAAE,UAAkB;;;;;;;oBACnD,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAiB,CAAC;oBAC9D,qBAAM,mBAAmB,CAAC,IAAI,EAAE,YAAY,EAAE,UAAU,CAAC,EAAA;;oBAAzD,SAAyD,CAAC;oBACvB,KAAA,oBAAoB,CAAA;0BAAC,YAAY,CAAC,IAAI;;oBAC9D,qBAAM,YAAY,CAAC,UAAU,EAAE,EAAA;wBADb,qBAAM,6BACjC,UAAO,GAAE,SAA+B;4BACxC,iBAAc,GAAE,CAAC,UAAU,CAAC;kCAC5B,EAAA;;oBAHM,gBAAgB,GAAK,CAAA,SAG3B,CAAA,iBAHsB;oBAKlB,aAAa,GAAG,mBAAmB,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;oBAElE,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,UAAA,EAAE;wBAC7D,OAAA,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC;oBAAhC,CAAgC,CACjC,CAAC;oBACF,IAAI,CAAC,aAAa,CAAC,GAAG,gCAAkB,EAAE;wBACxC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;qBACjC;oBAED,qBAAM,YAAY,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,EAAA;;oBAA3D,SAA2D,CAAC;oBAC5D,sBAAO,YAAY,EAAC;;;;CACrB;AAED,MAAM,UAAgB,KAAK,CACzB,IAAkB,EAClB,UAA0B,EAC1B,eAAuB;IAAvB,gCAAA,EAAA,uBAAuB;;;;;;oBAEA,KAAA,oBAAoB,CAAA;0BACzC,IAAI;oBACJ,KAAA,CAAA,KAAA,UAAU,CAAA,CAAC,cAAc,CAAA;0BAAC,IAAI,CAAC,IAAI;oBAAE,qBAAM,IAAI,CAAC,UAAU,EAAE,EAAA;wBAF7C,qBAAM,4BAErB,wBAAqC,SAAuB,GAAC;wBAC7D,eAAe,GAChB,EAAA;;oBAJK,QAAQ,GAAG,SAIhB;oBACD,sBAAO,kBAAkB,CAAC,aAAa,CAAC,IAAI,mCAAsB,QAAQ,CAAC,EAAC;;;;CAC7E;AAED,MAAM,UAAgB,mBAAmB,CACvC,QAAiB,EACjB,IAAkB,EAClB,QAAgB;;;;;wBAEhB,qBAAM,oBAAoB,CAAC,IAAI,CAAC,EAAA;;oBAAhC,SAAgC,CAAC;oBAC3B,WAAW,GAAG,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAErD,IAAI,GACR,QAAQ,KAAK,KAAK;wBAChB,CAAC;wBACD,CAAC,wDAA+B,CAAC;oBACrC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;;;CAClE\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/user/link_unlink.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { User } from '../../model/public_types';\r\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\r\nimport { AuthCredential } from '../credentials';\r\n/**\r\n * Unlinks a provider from a user account.\r\n *\r\n * @param user - The user.\r\n * @param providerId - The provider to unlink.\r\n *\r\n * @public\r\n */\r\nexport declare function unlink(user: User, providerId: string): Promise<User>;\r\nexport declare function _link(user: UserInternal, credential: AuthCredential, bypassAuthState?: boolean): Promise<UserCredentialInternal>;\r\nexport declare function _assertLinkedStatus(expected: boolean, user: UserInternal, provider: string): Promise<void>;\r\n"}}

{"code":"/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\n/**\r\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\r\n *\r\n * @param promises - Array of promises to wait on.\r\n */\r\nexport function _allSettled(promises) {\r\n    var _this = this;\r\n    return Promise.all(promises.map(function (promise) { return __awaiter(_this, void 0, void 0, function () {\r\n        var value, reason_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 3]);\r\n                    return [4 /*yield*/, promise];\r\n                case 1:\r\n                    value = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            fulfilled: true,\r\n                            value: value\r\n                        }];\r\n                case 2:\r\n                    reason_1 = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            fulfilled: false,\r\n                            reason: reason_1\r\n                        }];\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); }));\r\n}\r\n//# sourceMappingURL=promise.js.map","references":[],"map":"{\"version\":3,\"file\":\"promise.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/platform_browser/messagechannel/promise.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAkBH;;;;GAIG;AACH,MAAM,UAAU,WAAW,CACzB,QAA2B;IAD7B,iBAmBC;IAhBC,OAAO,OAAO,CAAC,GAAG,CAChB,QAAQ,CAAC,GAAG,CAAC,UAAM,OAAO;;;;;;oBAER,qBAAM,OAAO,EAAA;;oBAArB,KAAK,GAAG,SAAa;oBAC3B,sBAAO;4BACL,SAAS,EAAE,IAAI;4BACf,KAAK,OAAA;yBACuB,EAAC;;;oBAE/B,sBAAO;4BACL,SAAS,EAAE,KAAK;4BAChB,MAAM,UAAA;yBACkB,EAAC;;;;SAE9B,CAAC,CACH,CAAC;AACJ,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/platform_browser/messagechannel/promise.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\r\ninterface PromiseFulfilledResult<T> {\r\n    fulfilled: true;\r\n    value: T;\r\n}\r\ninterface PromiseRejectedResult {\r\n    fulfilled: false;\r\n    reason: any;\r\n}\r\nexport declare type PromiseSettledResult<T> = PromiseFulfilledResult<T> | PromiseRejectedResult;\r\n/**\r\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\r\n *\r\n * @param promises - Array of promises to wait on.\r\n */\r\nexport declare function _allSettled<T>(promises: Array<Promise<T>>): Promise<Array<PromiseSettledResult<T>>>;\r\nexport {};\r\n"}}

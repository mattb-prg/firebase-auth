{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { _assert } from '../util/assert';\r\nvar AuthInterop = /** @class */ (function () {\r\n    function AuthInterop(auth) {\r\n        this.auth = auth;\r\n        this.internalListeners = new Map();\r\n    }\r\n    AuthInterop.prototype.getUid = function () {\r\n        var _a;\r\n        this.assertAuthConfigured();\r\n        return ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.uid) || null;\r\n    };\r\n    AuthInterop.prototype.getToken = function (forceRefresh) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var accessToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.assertAuthConfigured();\r\n                        return [4 /*yield*/, this.auth._initializationPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (!this.auth.currentUser) {\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, this.auth.currentUser.getIdToken(forceRefresh)];\r\n                    case 2:\r\n                        accessToken = _a.sent();\r\n                        return [2 /*return*/, { accessToken: accessToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthInterop.prototype.addAuthTokenListener = function (listener) {\r\n        this.assertAuthConfigured();\r\n        if (this.internalListeners.has(listener)) {\r\n            return;\r\n        }\r\n        var unsubscribe = this.auth.onIdTokenChanged(function (user) {\r\n            listener((user === null || user === void 0 ? void 0 : user.stsTokenManager.accessToken) || null);\r\n        });\r\n        this.internalListeners.set(listener, unsubscribe);\r\n        this.updateProactiveRefresh();\r\n    };\r\n    AuthInterop.prototype.removeAuthTokenListener = function (listener) {\r\n        this.assertAuthConfigured();\r\n        var unsubscribe = this.internalListeners.get(listener);\r\n        if (!unsubscribe) {\r\n            return;\r\n        }\r\n        this.internalListeners.delete(listener);\r\n        unsubscribe();\r\n        this.updateProactiveRefresh();\r\n    };\r\n    AuthInterop.prototype.assertAuthConfigured = function () {\r\n        _assert(this.auth._initializationPromise, \"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */);\r\n    };\r\n    AuthInterop.prototype.updateProactiveRefresh = function () {\r\n        if (this.internalListeners.size > 0) {\r\n            this.auth._startProactiveRefresh();\r\n        }\r\n        else {\r\n            this.auth._stopProactiveRefresh();\r\n        }\r\n    };\r\n    return AuthInterop;\r\n}());\r\nexport { AuthInterop };\r\n//# sourceMappingURL=firebase_internal.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth-interop-types/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts"],"map":"{\"version\":3,\"file\":\"firebase_internal.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/auth/firebase_internal.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAOH,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAOzC;IAIE,qBAA6B,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QAH9B,sBAAiB,GAChC,IAAI,GAAG,EAAE,CAAC;IAEsC,CAAC;IAEnD,4BAAM,GAAN;;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,OAAO,CAAA,MAAA,IAAI,CAAC,IAAI,CAAC,WAAW,0CAAE,GAAG,KAAI,IAAI,CAAC;IAC5C,CAAC;IAEK,8BAAQ,GAAd,UACE,YAAsB;;;;;;wBAEtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,qBAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAA;;wBAAtC,SAAsC,CAAC;wBACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;4BAC1B,sBAAO,IAAI,EAAC;yBACb;wBAEmB,qBAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,EAAA;;wBAAlE,WAAW,GAAG,SAAoD;wBACxE,sBAAO,EAAE,WAAW,aAAA,EAAE,EAAC;;;;KACxB;IAED,0CAAoB,GAApB,UAAqB,QAAuB;QAC1C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACxC,OAAO;SACR;QAED,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAA,IAAI;YACjD,QAAQ,CACN,CAAC,IAA4B,aAA5B,IAAI,uBAAJ,IAAI,CAA0B,eAAe,CAAC,WAAW,KAAI,IAAI,CACnE,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,6CAAuB,GAAvB,UAAwB,QAAuB;QAC7C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxC,WAAW,EAAE,CAAC;QACd,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAEO,0CAAoB,GAA5B;QACE,OAAO,CACL,IAAI,CAAC,IAAI,CAAC,sBAAsB,6FAEjC,CAAC;IACJ,CAAC;IAEO,4CAAsB,GAA9B;QACE,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,CAAC,EAAE;YACnC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;SACnC;IACH,CAAC;IACH,kBAAC;AAAD,CAAC,AAjED,IAiEC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/auth/firebase_internal.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\r\nimport { AuthInternal } from '../../model/auth';\r\ninterface TokenListener {\r\n    (tok: string | null): unknown;\r\n}\r\nexport declare class AuthInterop implements FirebaseAuthInternal {\r\n    private readonly auth;\r\n    private readonly internalListeners;\r\n    constructor(auth: AuthInternal);\r\n    getUid(): string | null;\r\n    getToken(forceRefresh?: boolean): Promise<{\r\n        accessToken: string;\r\n    } | null>;\r\n    addAuthTokenListener(listener: TokenListener): void;\r\n    removeAuthTokenListener(listener: TokenListener): void;\r\n    private assertAuthConfigured;\r\n    private updateProactiveRefresh;\r\n}\r\nexport {};\r\n"}}

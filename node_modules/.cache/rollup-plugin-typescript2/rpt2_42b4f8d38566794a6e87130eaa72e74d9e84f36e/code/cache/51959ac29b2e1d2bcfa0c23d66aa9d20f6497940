{"code":"/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { _performApiRequest, _addTidIfNecessary } from '../index';\r\n/**\r\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\r\n *\r\n * @param auth Auth object.\r\n * @param request Password policy request.\r\n * @returns Password policy response.\r\n */\r\nexport function _getPasswordPolicy(auth, request) {\r\n    if (request === void 0) { request = {}; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v2/passwordPolicy\" /* Endpoint.GET_PASSWORD_POLICY */, _addTidIfNecessary(auth, request))];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=get_password_policy.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts"],"map":"{\"version\":3,\"file\":\"get_password_policy.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/api/password_policy/get_password_policy.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,OAAO,EACL,kBAAkB,EAGlB,kBAAkB,EACnB,MAAM,UAAU,CAAC;AA4BlB;;;;;;GAMG;AACH,MAAM,UAAgB,kBAAkB,CACtC,IAAU,EACV,OAAsC;IAAtC,wBAAA,EAAA,YAAsC;;;YAEtC,sBAAO,kBAAkB,CAIvB,IAAI,uFAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,EAAC;;;CACH\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/api/password_policy/get_password_policy.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Auth } from '../../model/public_types';\r\n/**\r\n * Request object for fetching the password policy.\r\n */\r\nexport interface GetPasswordPolicyRequest {\r\n    tenantId?: string;\r\n}\r\n/**\r\n * Response object for fetching the password policy.\r\n */\r\nexport interface GetPasswordPolicyResponse {\r\n    customStrengthOptions: {\r\n        minPasswordLength?: number;\r\n        maxPasswordLength?: number;\r\n        containsLowercaseCharacter?: boolean;\r\n        containsUppercaseCharacter?: boolean;\r\n        containsNumericCharacter?: boolean;\r\n        containsNonAlphanumericCharacter?: boolean;\r\n    };\r\n    allowedNonAlphanumericCharacters?: string[];\r\n    enforcementState: string;\r\n    forceUpgradeOnSignin?: boolean;\r\n    schemaVersion: number;\r\n}\r\n/**\r\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\r\n *\r\n * @param auth Auth object.\r\n * @param request Password policy request.\r\n * @returns Password policy response.\r\n */\r\nexport declare function _getPasswordPolicy(auth: Auth, request?: GetPasswordPolicyRequest): Promise<GetPasswordPolicyResponse>;\r\n"}}

{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { _performApiRequest, _addTidIfNecessary } from '../index';\r\nexport function getRecaptchaParams(auth) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v1/recaptchaParams\" /* Endpoint.GET_RECAPTCHA_PARAM */)];\r\n                case 1: return [2 /*return*/, ((_a.sent()).recaptchaSiteKey || '')];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function getRecaptchaConfig(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v2/recaptchaConfig\" /* Endpoint.GET_RECAPTCHA_CONFIG */, _addTidIfNecessary(auth, request))];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=recaptcha.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts"],"map":"{\"version\":3,\"file\":\"recaptcha.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/api/authentication/recaptcha.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,OAAO,EAKL,kBAAkB,EAClB,kBAAkB,EACnB,MAAM,UAAU,CAAC;AAOlB,MAAM,UAAgB,kBAAkB,CAAC,IAAU;;;;wBAG7C,qBAAM,kBAAkB,CACtB,IAAI,uFAGL,EAAA;wBANL,sBAAO,CACL,CACE,SAIC,CACF,CAAC,gBAAgB,IAAI,EAAE,CACzB,EAAC;;;;CACH;AAmBD,MAAM,UAAgB,kBAAkB,CACtC,IAAU,EACV,OAAkC;;;YAElC,sBAAO,kBAAkB,CAIvB,IAAI,yFAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,EAAC;;;CACH\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/api/authentication/recaptcha.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { RecaptchaClientType, RecaptchaVersion } from '../index';\r\nimport { Auth } from '../../model/public_types';\r\nexport declare function getRecaptchaParams(auth: Auth): Promise<string>;\r\ninterface GetRecaptchaConfigRequest {\r\n    tenantId?: string;\r\n    clientType?: RecaptchaClientType;\r\n    version?: RecaptchaVersion;\r\n}\r\nexport interface RecaptchaEnforcementProviderState {\r\n    provider: string;\r\n    enforcementState: string;\r\n}\r\nexport interface GetRecaptchaConfigResponse {\r\n    recaptchaKey: string;\r\n    recaptchaEnforcementState: RecaptchaEnforcementProviderState[];\r\n}\r\nexport declare function getRecaptchaConfig(auth: Auth, request: GetRecaptchaConfigRequest): Promise<GetRecaptchaConfigResponse>;\r\nexport {};\r\n"}}

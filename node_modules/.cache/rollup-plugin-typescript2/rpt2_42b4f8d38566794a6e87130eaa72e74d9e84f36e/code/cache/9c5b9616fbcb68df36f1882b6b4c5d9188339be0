{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nvar ProactiveRefresh = /** @class */ (function () {\r\n    function ProactiveRefresh(user) {\r\n        this.user = user;\r\n        this.isRunning = false;\r\n        // Node timers and browser timers return fundamentally different types.\r\n        // We don't actually care what the value is but TS won't accept unknown and\r\n        // we can't cast properly in both environments.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.timerId = null;\r\n        this.errorBackoff = 30000 /* Duration.RETRY_BACKOFF_MIN */;\r\n    }\r\n    ProactiveRefresh.prototype._start = function () {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = true;\r\n        this.schedule();\r\n    };\r\n    ProactiveRefresh.prototype._stop = function () {\r\n        if (!this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = false;\r\n        if (this.timerId !== null) {\r\n            clearTimeout(this.timerId);\r\n        }\r\n    };\r\n    ProactiveRefresh.prototype.getInterval = function (wasError) {\r\n        var _a;\r\n        if (wasError) {\r\n            var interval = this.errorBackoff;\r\n            this.errorBackoff = Math.min(this.errorBackoff * 2, 960000 /* Duration.RETRY_BACKOFF_MAX */);\r\n            return interval;\r\n        }\r\n        else {\r\n            // Reset the error backoff\r\n            this.errorBackoff = 30000 /* Duration.RETRY_BACKOFF_MIN */;\r\n            var expTime = (_a = this.user.stsTokenManager.expirationTime) !== null && _a !== void 0 ? _a : 0;\r\n            var interval = expTime - Date.now() - 300000 /* Duration.OFFSET */;\r\n            return Math.max(0, interval);\r\n        }\r\n    };\r\n    ProactiveRefresh.prototype.schedule = function (wasError) {\r\n        var _this = this;\r\n        if (wasError === void 0) { wasError = false; }\r\n        if (!this.isRunning) {\r\n            // Just in case...\r\n            return;\r\n        }\r\n        var interval = this.getInterval(wasError);\r\n        this.timerId = setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.iteration()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, interval);\r\n    };\r\n    ProactiveRefresh.prototype.iteration = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.user.getIdToken(true)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        // Only retry on network errors\r\n                        if ((e_1 === null || e_1 === void 0 ? void 0 : e_1.code) ===\r\n                            \"auth/\".concat(\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */)) {\r\n                            this.schedule(/* wasError */ true);\r\n                        }\r\n                        return [2 /*return*/];\r\n                    case 3:\r\n                        this.schedule();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ProactiveRefresh;\r\n}());\r\nexport { ProactiveRefresh };\r\n//# sourceMappingURL=proactive_refresh.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts"],"map":"{\"version\":3,\"file\":\"proactive_refresh.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/user/proactive_refresh.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAaH;IAUE,0BAA6B,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QATvC,cAAS,GAAG,KAAK,CAAC;QAE1B,uEAAuE;QACvE,2EAA2E;QAC3E,+CAA+C;QAC/C,8DAA8D;QACtD,YAAO,GAAe,IAAI,CAAC;QAC3B,iBAAY,0CAA8B;IAEA,CAAC;IAEnD,iCAAM,GAAN;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,gCAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACzB,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5B;IACH,CAAC;IAEO,sCAAW,GAAnB,UAAoB,QAAiB;;QACnC,IAAI,QAAQ,EAAE;YACZ,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAC1B,IAAI,CAAC,YAAY,GAAG,CAAC,0CAEtB,CAAC;YACF,OAAO,QAAQ,CAAC;SACjB;aAAM;YACL,0BAA0B;YAC1B,IAAI,CAAC,YAAY,yCAA6B,CAAC;YAC/C,IAAM,OAAO,GAAG,MAAA,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,mCAAI,CAAC,CAAC;YAC9D,IAAM,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,+BAAkB,CAAC;YAExD,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;SAC9B;IACH,CAAC;IAEO,mCAAQ,GAAhB,UAAiB,QAAgB;QAAjC,iBAUC;QAVgB,yBAAA,EAAA,gBAAgB;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,kBAAkB;YAClB,OAAO;SACR;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;;;4BACxB,qBAAM,IAAI,CAAC,SAAS,EAAE,EAAA;;wBAAtB,SAAsB,CAAC;;;;aACxB,EAAE,QAAQ,CAAC,CAAC;IACf,CAAC;IAEa,oCAAS,GAAvB;;;;;;;wBAEI,qBAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAA;;wBAAhC,SAAgC,CAAC;;;;wBAEjC,+BAA+B;wBAC/B,IACE,CAAC,GAAmB,aAAnB,GAAC,uBAAD,GAAC,CAAoB,IAAI;4BAC1B,mFAA8C,EAC9C;4BACA,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;yBACpC;wBAED,sBAAO;;wBAET,IAAI,CAAC,QAAQ,EAAE,CAAC;;;;;KACjB;IACH,uBAAC;AAAD,CAAC,AA9ED,IA8EC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/user/proactive_refresh.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { UserInternal } from '../../model/user';\r\nexport declare const enum Duration {\r\n    OFFSET = 300000,\r\n    RETRY_BACKOFF_MIN = 30000,\r\n    RETRY_BACKOFF_MAX = 960000\r\n}\r\nexport declare class ProactiveRefresh {\r\n    private readonly user;\r\n    private isRunning;\r\n    private timerId;\r\n    private errorBackoff;\r\n    constructor(user: UserInternal);\r\n    _start(): void;\r\n    _stop(): void;\r\n    private getInterval;\r\n    private schedule;\r\n    private iteration;\r\n}\r\n"}}

{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __assign, __awaiter, __generator, __rest, __spreadArray } from \"tslib\";\r\nimport { deleteAccount } from '../../api/account_management/account';\r\nimport { _assert } from '../util/assert';\r\nimport { getIdTokenResult } from './id_token_result';\r\nimport { _logoutIfInvalidated } from './invalidation';\r\nimport { ProactiveRefresh } from './proactive_refresh';\r\nimport { _reloadWithoutSaving, reload } from './reload';\r\nimport { StsTokenManager } from './token_manager';\r\nimport { UserMetadata } from './user_metadata';\r\nfunction assertStringOrUndefined(assertion, appName) {\r\n    _assert(typeof assertion === 'string' || typeof assertion === 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, { appName: appName });\r\n}\r\nvar UserImpl = /** @class */ (function () {\r\n    function UserImpl(_a) {\r\n        var uid = _a.uid, auth = _a.auth, stsTokenManager = _a.stsTokenManager, opt = __rest(_a, [\"uid\", \"auth\", \"stsTokenManager\"]);\r\n        // For the user object, provider is always Firebase.\r\n        this.providerId = \"firebase\" /* ProviderId.FIREBASE */;\r\n        this.proactiveRefresh = new ProactiveRefresh(this);\r\n        this.reloadUserInfo = null;\r\n        this.reloadListener = null;\r\n        this.uid = uid;\r\n        this.auth = auth;\r\n        this.stsTokenManager = stsTokenManager;\r\n        this.accessToken = stsTokenManager.accessToken;\r\n        this.displayName = opt.displayName || null;\r\n        this.email = opt.email || null;\r\n        this.emailVerified = opt.emailVerified || false;\r\n        this.phoneNumber = opt.phoneNumber || null;\r\n        this.photoURL = opt.photoURL || null;\r\n        this.isAnonymous = opt.isAnonymous || false;\r\n        this.tenantId = opt.tenantId || null;\r\n        this.providerData = opt.providerData ? __spreadArray([], opt.providerData, true) : [];\r\n        this.metadata = new UserMetadata(opt.createdAt || undefined, opt.lastLoginAt || undefined);\r\n    }\r\n    UserImpl.prototype.getIdToken = function (forceRefresh) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var accessToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, _logoutIfInvalidated(this, this.stsTokenManager.getToken(this.auth, forceRefresh))];\r\n                    case 1:\r\n                        accessToken = _a.sent();\r\n                        _assert(accessToken, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n                        if (!(this.accessToken !== accessToken)) return [3 /*break*/, 3];\r\n                        this.accessToken = accessToken;\r\n                        return [4 /*yield*/, this.auth._persistUserIfCurrent(this)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.auth._notifyListenersIfCurrent(this);\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/, accessToken];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    UserImpl.prototype.getIdTokenResult = function (forceRefresh) {\r\n        return getIdTokenResult(this, forceRefresh);\r\n    };\r\n    UserImpl.prototype.reload = function () {\r\n        return reload(this);\r\n    };\r\n    UserImpl.prototype._assign = function (user) {\r\n        if (this === user) {\r\n            return;\r\n        }\r\n        _assert(this.uid === user.uid, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        this.displayName = user.displayName;\r\n        this.photoURL = user.photoURL;\r\n        this.email = user.email;\r\n        this.emailVerified = user.emailVerified;\r\n        this.phoneNumber = user.phoneNumber;\r\n        this.isAnonymous = user.isAnonymous;\r\n        this.tenantId = user.tenantId;\r\n        this.providerData = user.providerData.map(function (userInfo) { return (__assign({}, userInfo)); });\r\n        this.metadata._copy(user.metadata);\r\n        this.stsTokenManager._assign(user.stsTokenManager);\r\n    };\r\n    UserImpl.prototype._clone = function (auth) {\r\n        var newUser = new UserImpl(__assign(__assign({}, this), { auth: auth, stsTokenManager: this.stsTokenManager._clone() }));\r\n        newUser.metadata._copy(this.metadata);\r\n        return newUser;\r\n    };\r\n    UserImpl.prototype._onReload = function (callback) {\r\n        // There should only ever be one listener, and that is a single instance of MultiFactorUser\r\n        _assert(!this.reloadListener, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        this.reloadListener = callback;\r\n        if (this.reloadUserInfo) {\r\n            this._notifyReloadListener(this.reloadUserInfo);\r\n            this.reloadUserInfo = null;\r\n        }\r\n    };\r\n    UserImpl.prototype._notifyReloadListener = function (userInfo) {\r\n        if (this.reloadListener) {\r\n            this.reloadListener(userInfo);\r\n        }\r\n        else {\r\n            // If no listener is subscribed yet, save the result so it's available when they do subscribe\r\n            this.reloadUserInfo = userInfo;\r\n        }\r\n    };\r\n    UserImpl.prototype._startProactiveRefresh = function () {\r\n        this.proactiveRefresh._start();\r\n    };\r\n    UserImpl.prototype._stopProactiveRefresh = function () {\r\n        this.proactiveRefresh._stop();\r\n    };\r\n    UserImpl.prototype._updateTokensIfNecessary = function (response, reload) {\r\n        if (reload === void 0) { reload = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokensRefreshed;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        tokensRefreshed = false;\r\n                        if (response.idToken &&\r\n                            response.idToken !== this.stsTokenManager.accessToken) {\r\n                            this.stsTokenManager.updateFromServerResponse(response);\r\n                            tokensRefreshed = true;\r\n                        }\r\n                        if (!reload) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, _reloadWithoutSaving(this)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [4 /*yield*/, this.auth._persistUserIfCurrent(this)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        if (tokensRefreshed) {\r\n                            this.auth._notifyListenersIfCurrent(this);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    UserImpl.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var idToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getIdToken()];\r\n                    case 1:\r\n                        idToken = _a.sent();\r\n                        return [4 /*yield*/, _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken: idToken }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.stsTokenManager.clearRefreshToken();\r\n                        // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\r\n                        //       cancels pending actions...\r\n                        return [2 /*return*/, this.auth.signOut()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    UserImpl.prototype.toJSON = function () {\r\n        return __assign(__assign({ uid: this.uid, email: this.email || undefined, emailVerified: this.emailVerified, displayName: this.displayName || undefined, isAnonymous: this.isAnonymous, photoURL: this.photoURL || undefined, phoneNumber: this.phoneNumber || undefined, tenantId: this.tenantId || undefined, providerData: this.providerData.map(function (userInfo) { return (__assign({}, userInfo)); }), stsTokenManager: this.stsTokenManager.toJSON(), \r\n            // Redirect event ID must be maintained in case there is a pending\r\n            // redirect event.\r\n            _redirectEventId: this._redirectEventId }, this.metadata.toJSON()), { \r\n            // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\r\n            apiKey: this.auth.config.apiKey, appName: this.auth.name });\r\n    };\r\n    Object.defineProperty(UserImpl.prototype, \"refreshToken\", {\r\n        get: function () {\r\n            return this.stsTokenManager.refreshToken || '';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UserImpl._fromJSON = function (auth, object) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        var displayName = (_a = object.displayName) !== null && _a !== void 0 ? _a : undefined;\r\n        var email = (_b = object.email) !== null && _b !== void 0 ? _b : undefined;\r\n        var phoneNumber = (_c = object.phoneNumber) !== null && _c !== void 0 ? _c : undefined;\r\n        var photoURL = (_d = object.photoURL) !== null && _d !== void 0 ? _d : undefined;\r\n        var tenantId = (_e = object.tenantId) !== null && _e !== void 0 ? _e : undefined;\r\n        var _redirectEventId = (_f = object._redirectEventId) !== null && _f !== void 0 ? _f : undefined;\r\n        var createdAt = (_g = object.createdAt) !== null && _g !== void 0 ? _g : undefined;\r\n        var lastLoginAt = (_h = object.lastLoginAt) !== null && _h !== void 0 ? _h : undefined;\r\n        var uid = object.uid, emailVerified = object.emailVerified, isAnonymous = object.isAnonymous, providerData = object.providerData, plainObjectTokenManager = object.stsTokenManager;\r\n        _assert(uid && plainObjectTokenManager, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        var stsTokenManager = StsTokenManager.fromJSON(this.name, plainObjectTokenManager);\r\n        _assert(typeof uid === 'string', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        assertStringOrUndefined(displayName, auth.name);\r\n        assertStringOrUndefined(email, auth.name);\r\n        _assert(typeof emailVerified === 'boolean', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        _assert(typeof isAnonymous === 'boolean', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        assertStringOrUndefined(phoneNumber, auth.name);\r\n        assertStringOrUndefined(photoURL, auth.name);\r\n        assertStringOrUndefined(tenantId, auth.name);\r\n        assertStringOrUndefined(_redirectEventId, auth.name);\r\n        assertStringOrUndefined(createdAt, auth.name);\r\n        assertStringOrUndefined(lastLoginAt, auth.name);\r\n        var user = new UserImpl({\r\n            uid: uid,\r\n            auth: auth,\r\n            email: email,\r\n            emailVerified: emailVerified,\r\n            displayName: displayName,\r\n            isAnonymous: isAnonymous,\r\n            photoURL: photoURL,\r\n            phoneNumber: phoneNumber,\r\n            tenantId: tenantId,\r\n            stsTokenManager: stsTokenManager,\r\n            createdAt: createdAt,\r\n            lastLoginAt: lastLoginAt\r\n        });\r\n        if (providerData && Array.isArray(providerData)) {\r\n            user.providerData = providerData.map(function (userInfo) { return (__assign({}, userInfo)); });\r\n        }\r\n        if (_redirectEventId) {\r\n            user._redirectEventId = _redirectEventId;\r\n        }\r\n        return user;\r\n    };\r\n    /**\r\n     * Initialize a User from an idToken server response\r\n     * @param auth\r\n     * @param idTokenResponse\r\n     */\r\n    UserImpl._fromIdTokenResponse = function (auth, idTokenResponse, isAnonymous) {\r\n        if (isAnonymous === void 0) { isAnonymous = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var stsTokenManager, user;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        stsTokenManager = new StsTokenManager();\r\n                        stsTokenManager.updateFromServerResponse(idTokenResponse);\r\n                        user = new UserImpl({\r\n                            uid: idTokenResponse.localId,\r\n                            auth: auth,\r\n                            stsTokenManager: stsTokenManager,\r\n                            isAnonymous: isAnonymous\r\n                        });\r\n                        // Updates the user info and data and resolves with a user instance.\r\n                        return [4 /*yield*/, _reloadWithoutSaving(user)];\r\n                    case 1:\r\n                        // Updates the user info and data and resolves with a user instance.\r\n                        _a.sent();\r\n                        return [2 /*return*/, user];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return UserImpl;\r\n}());\r\nexport { UserImpl };\r\n//# sourceMappingURL=user_impl.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/account_management/account.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/mfa.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/persistence/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/id_token_result.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/invalidation.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/proactive_refresh.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/reload.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/token_manager.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/user_metadata.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/enums.ts"],"map":"{\"version\":3,\"file\":\"user_impl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/user/user_impl.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/user/user_impl.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { IdTokenResult } from '../../model/public_types';\r\nimport { NextFn } from '@firebase/util';\r\nimport { APIUserInfo } from '../../api/account_management/account';\r\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { IdTokenResponse } from '../../model/id_token';\r\nimport { MutableUserInfo, UserInternal, UserParameters } from '../../model/user';\r\nimport { PersistedBlob } from '../persistence';\r\nimport { StsTokenManager } from './token_manager';\r\nimport { UserMetadata } from './user_metadata';\r\nimport { ProviderId } from '../../model/enums';\r\nexport declare class UserImpl implements UserInternal {\r\n    readonly providerId = ProviderId.FIREBASE;\r\n    stsTokenManager: StsTokenManager;\r\n    private accessToken;\r\n    uid: string;\r\n    auth: AuthInternal;\r\n    emailVerified: boolean;\r\n    isAnonymous: boolean;\r\n    tenantId: string | null;\r\n    readonly metadata: UserMetadata;\r\n    providerData: MutableUserInfo[];\r\n    displayName: string | null;\r\n    email: string | null;\r\n    phoneNumber: string | null;\r\n    photoURL: string | null;\r\n    _redirectEventId?: string;\r\n    private readonly proactiveRefresh;\r\n    constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters);\r\n    getIdToken(forceRefresh?: boolean): Promise<string>;\r\n    getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult>;\r\n    reload(): Promise<void>;\r\n    private reloadUserInfo;\r\n    private reloadListener;\r\n    _assign(user: UserInternal): void;\r\n    _clone(auth: AuthInternal): UserInternal;\r\n    _onReload(callback: NextFn<APIUserInfo>): void;\r\n    _notifyReloadListener(userInfo: APIUserInfo): void;\r\n    _startProactiveRefresh(): void;\r\n    _stopProactiveRefresh(): void;\r\n    _updateTokensIfNecessary(response: IdTokenResponse | FinalizeMfaResponse, reload?: boolean): Promise<void>;\r\n    delete(): Promise<void>;\r\n    toJSON(): PersistedBlob;\r\n    get refreshToken(): string;\r\n    static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal;\r\n    /**\r\n     * Initialize a User from an idToken server response\r\n     * @param auth\r\n     * @param idTokenResponse\r\n     */\r\n    static _fromIdTokenResponse(auth: AuthInternal, idTokenResponse: IdTokenResponse, isAnonymous?: boolean): Promise<UserInternal>;\r\n}\r\n"}}

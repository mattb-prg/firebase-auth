{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { _createError } from '../util/assert';\r\n// The amount of time to store the UIDs of seen events; this is\r\n// set to 10 min by default\r\nvar EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\r\nvar AuthEventManager = /** @class */ (function () {\r\n    function AuthEventManager(auth) {\r\n        this.auth = auth;\r\n        this.cachedEventUids = new Set();\r\n        this.consumers = new Set();\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n        this.lastProcessedEventTime = Date.now();\r\n    }\r\n    AuthEventManager.prototype.registerConsumer = function (authEventConsumer) {\r\n        this.consumers.add(authEventConsumer);\r\n        if (this.queuedRedirectEvent &&\r\n            this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)) {\r\n            this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\r\n            this.saveEventToCache(this.queuedRedirectEvent);\r\n            this.queuedRedirectEvent = null;\r\n        }\r\n    };\r\n    AuthEventManager.prototype.unregisterConsumer = function (authEventConsumer) {\r\n        this.consumers.delete(authEventConsumer);\r\n    };\r\n    AuthEventManager.prototype.onEvent = function (event) {\r\n        var _this = this;\r\n        // Check if the event has already been handled\r\n        if (this.hasEventBeenHandled(event)) {\r\n            return false;\r\n        }\r\n        var handled = false;\r\n        this.consumers.forEach(function (consumer) {\r\n            if (_this.isEventForConsumer(event, consumer)) {\r\n                handled = true;\r\n                _this.sendToConsumer(event, consumer);\r\n                _this.saveEventToCache(event);\r\n            }\r\n        });\r\n        if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\r\n            // If we've already seen a redirect before, or this is a popup event,\r\n            // bail now\r\n            return handled;\r\n        }\r\n        this.hasHandledPotentialRedirect = true;\r\n        // If the redirect wasn't handled, hang on to it\r\n        if (!handled) {\r\n            this.queuedRedirectEvent = event;\r\n            handled = true;\r\n        }\r\n        return handled;\r\n    };\r\n    AuthEventManager.prototype.sendToConsumer = function (event, consumer) {\r\n        var _a;\r\n        if (event.error && !isNullRedirectEvent(event)) {\r\n            var code = ((_a = event.error.code) === null || _a === void 0 ? void 0 : _a.split('auth/')[1]) ||\r\n                \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */;\r\n            consumer.onError(_createError(this.auth, code));\r\n        }\r\n        else {\r\n            consumer.onAuthEvent(event);\r\n        }\r\n    };\r\n    AuthEventManager.prototype.isEventForConsumer = function (event, consumer) {\r\n        var eventIdMatches = consumer.eventId === null ||\r\n            (!!event.eventId && event.eventId === consumer.eventId);\r\n        return consumer.filter.includes(event.type) && eventIdMatches;\r\n    };\r\n    AuthEventManager.prototype.hasEventBeenHandled = function (event) {\r\n        if (Date.now() - this.lastProcessedEventTime >=\r\n            EVENT_DUPLICATION_CACHE_DURATION_MS) {\r\n            this.cachedEventUids.clear();\r\n        }\r\n        return this.cachedEventUids.has(eventUid(event));\r\n    };\r\n    AuthEventManager.prototype.saveEventToCache = function (event) {\r\n        this.cachedEventUids.add(eventUid(event));\r\n        this.lastProcessedEventTime = Date.now();\r\n    };\r\n    return AuthEventManager;\r\n}());\r\nexport { AuthEventManager };\r\nfunction eventUid(e) {\r\n    return [e.type, e.eventId, e.sessionId, e.tenantId].filter(function (v) { return v; }).join('-');\r\n}\r\nfunction isNullRedirectEvent(_a) {\r\n    var type = _a.type, error = _a.error;\r\n    return (type === \"unknown\" /* AuthEventType.UNKNOWN */ &&\r\n        (error === null || error === void 0 ? void 0 : error.code) === \"auth/\".concat(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */));\r\n}\r\nfunction isRedirectEvent(event) {\r\n    switch (event.type) {\r\n        case \"signInViaRedirect\" /* AuthEventType.SIGN_IN_VIA_REDIRECT */:\r\n        case \"linkViaRedirect\" /* AuthEventType.LINK_VIA_REDIRECT */:\r\n        case \"reauthViaRedirect\" /* AuthEventType.REAUTH_VIA_REDIRECT */:\r\n            return true;\r\n        case \"unknown\" /* AuthEventType.UNKNOWN */:\r\n            return isNullRedirectEvent(event);\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n//# sourceMappingURL=auth_event_manager.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/popup_redirect.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts"],"map":"{\"version\":3,\"file\":\"auth_event_manager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/auth/auth_event_manager.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/auth/auth_event_manager.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { AuthEvent, AuthEventConsumer, EventManager } from '../../model/popup_redirect';\r\nimport { AuthInternal } from '../../model/auth';\r\nexport declare class AuthEventManager implements EventManager {\r\n    private readonly auth;\r\n    private readonly cachedEventUids;\r\n    private readonly consumers;\r\n    protected queuedRedirectEvent: AuthEvent | null;\r\n    protected hasHandledPotentialRedirect: boolean;\r\n    private lastProcessedEventTime;\r\n    constructor(auth: AuthInternal);\r\n    registerConsumer(authEventConsumer: AuthEventConsumer): void;\r\n    unregisterConsumer(authEventConsumer: AuthEventConsumer): void;\r\n    onEvent(event: AuthEvent): boolean;\r\n    private sendToConsumer;\r\n    private isEventForConsumer;\r\n    private hasEventBeenHandled;\r\n    private saveEventToCache;\r\n}\r\n"}}

{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { SDK_VERSION } from '@firebase/app';\r\nimport { _getBrowserName } from './browser';\r\nimport { getUA } from '@firebase/util';\r\n/*\r\n * Determine the SDK version string\r\n */\r\nexport function _getClientVersion(clientPlatform, frameworks) {\r\n    if (frameworks === void 0) { frameworks = []; }\r\n    var reportedPlatform;\r\n    switch (clientPlatform) {\r\n        case \"Browser\" /* ClientPlatform.BROWSER */:\r\n            // In a browser environment, report the browser name.\r\n            reportedPlatform = _getBrowserName(getUA());\r\n            break;\r\n        case \"Worker\" /* ClientPlatform.WORKER */:\r\n            // Technically a worker runs from a browser but we need to differentiate a\r\n            // worker from a browser.\r\n            // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\r\n            reportedPlatform = \"\".concat(_getBrowserName(getUA()), \"-\").concat(clientPlatform);\r\n            break;\r\n        default:\r\n            reportedPlatform = clientPlatform;\r\n    }\r\n    var reportedFrameworks = frameworks.length\r\n        ? frameworks.join(',')\r\n        : 'FirebaseCore-web'; /* default value if no other framework is used */\r\n    return \"\".concat(reportedPlatform, \"/\").concat(\"JsCore\" /* ClientImplementation.CORE */, \"/\").concat(SDK_VERSION, \"/\").concat(reportedFrameworks);\r\n}\r\n//# sourceMappingURL=version.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/app/dist/app/src/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/browser.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"version.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/util/version.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,eAAe,EAAE,MAAM,WAAW,CAAC;AAC5C,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAiBvC;;GAEG;AACH,MAAM,UAAU,iBAAiB,CAC/B,cAA8B,EAC9B,UAAkC;IAAlC,2BAAA,EAAA,eAAkC;IAElC,IAAI,gBAAwB,CAAC;IAC7B,QAAQ,cAAc,EAAE;QACtB;YACE,qDAAqD;YACrD,gBAAgB,GAAG,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC;YAC5C,MAAM;QACR;YACE,0EAA0E;YAC1E,yBAAyB;YACzB,4DAA4D;YAC5D,gBAAgB,GAAG,UAAG,eAAe,CAAC,KAAK,EAAE,CAAC,cAAI,cAAc,CAAE,CAAC;YACnE,MAAM;QACR;YACE,gBAAgB,GAAG,cAAc,CAAC;KACrC;IACD,IAAM,kBAAkB,GAAG,UAAU,CAAC,MAAM;QAC1C,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;QACtB,CAAC,CAAC,kBAAkB,CAAC,CAAC,iDAAiD;IACzE,OAAO,UAAG,gBAAgB,oEAAiC,WAAW,cAAI,kBAAkB,CAAE,CAAC;AACjG,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/util/version.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport declare const enum ClientImplementation {\r\n    CORE = \"JsCore\"\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport declare const enum ClientPlatform {\r\n    BROWSER = \"Browser\",\r\n    NODE = \"Node\",\r\n    REACT_NATIVE = \"ReactNative\",\r\n    CORDOVA = \"Cordova\",\r\n    WORKER = \"Worker\"\r\n}\r\nexport declare function _getClientVersion(clientPlatform: ClientPlatform, frameworks?: readonly string[]): string;\r\n"}}

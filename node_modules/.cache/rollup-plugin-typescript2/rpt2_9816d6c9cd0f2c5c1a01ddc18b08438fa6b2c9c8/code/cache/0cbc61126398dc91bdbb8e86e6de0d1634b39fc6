{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { _performApiRequest } from '../index';\r\nexport function deleteAccount(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:delete\" /* Endpoint.DELETE_ACCOUNT */, request)];\r\n        });\r\n    });\r\n}\r\nexport function deleteLinkedAccounts(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request)];\r\n        });\r\n    });\r\n}\r\nexport function getAccountInfo(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:lookup\" /* Endpoint.GET_ACCOUNT_INFO */, request)];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=account.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/account_management/mfa.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts"],"map":"{\"version\":3,\"file\":\"account.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/api/account_management/account.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,OAAO,EAAwB,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAQpE,MAAM,UAAgB,aAAa,CACjC,IAAU,EACV,OAA6B;;;YAE7B,sBAAO,kBAAkB,CACvB,IAAI,qFAGJ,OAAO,CACR,EAAC;;;CACH;AAoBD,MAAM,UAAgB,oBAAoB,CACxC,IAAU,EACV,OAAoC;;;YAEpC,sBAAO,kBAAkB,CAGvB,IAAI,uFAA8C,OAAO,CAAC,EAAC;;;CAC9D;AAyBD,MAAM,UAAgB,cAAc,CAClC,IAAU,EACV,OAA8B;;;YAE9B,sBAAO,kBAAkB,CACvB,IAAI,uFAGJ,OAAO,CACR,EAAC;;;CACH\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/api/account_management/account.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { MfaEnrollment } from './mfa';\r\nimport { Auth } from '../../model/public_types';\r\nexport interface DeleteAccountRequest {\r\n    idToken: string;\r\n}\r\nexport declare function deleteAccount(auth: Auth, request: DeleteAccountRequest): Promise<void>;\r\nexport interface ProviderUserInfo {\r\n    providerId: string;\r\n    rawId?: string;\r\n    email?: string;\r\n    displayName?: string;\r\n    photoUrl?: string;\r\n    phoneNumber?: string;\r\n}\r\nexport interface DeleteLinkedAccountsRequest {\r\n    idToken: string;\r\n    deleteProvider: string[];\r\n}\r\nexport interface DeleteLinkedAccountsResponse {\r\n    providerUserInfo: ProviderUserInfo[];\r\n}\r\nexport declare function deleteLinkedAccounts(auth: Auth, request: DeleteLinkedAccountsRequest): Promise<DeleteLinkedAccountsResponse>;\r\nexport interface APIUserInfo {\r\n    localId?: string;\r\n    displayName?: string;\r\n    photoUrl?: string;\r\n    email?: string;\r\n    emailVerified?: boolean;\r\n    phoneNumber?: string;\r\n    lastLoginAt?: number;\r\n    createdAt?: number;\r\n    tenantId?: string;\r\n    passwordHash?: string;\r\n    providerUserInfo?: ProviderUserInfo[];\r\n    mfaInfo?: MfaEnrollment[];\r\n}\r\nexport interface GetAccountInfoRequest {\r\n    idToken: string;\r\n}\r\nexport interface GetAccountInfoResponse {\r\n    users: APIUserInfo[];\r\n}\r\nexport declare function getAccountInfo(auth: Auth, request: GetAccountInfoRequest): Promise<GetAccountInfoResponse>;\r\n"}}

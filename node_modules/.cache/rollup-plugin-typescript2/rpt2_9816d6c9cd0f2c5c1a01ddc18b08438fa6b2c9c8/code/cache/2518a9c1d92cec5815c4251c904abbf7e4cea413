{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\r\n *\r\n * @public\r\n */\r\nimport { signInWithIdp } from '../../api/authentication/idp';\r\nimport { AuthCredential } from './auth_credential';\r\nvar IDP_REQUEST_URI = 'http://localhost';\r\n/**\r\n * @public\r\n */\r\nvar SAMLAuthCredential = /** @class */ (function (_super) {\r\n    __extends(SAMLAuthCredential, _super);\r\n    /** @internal */\r\n    function SAMLAuthCredential(providerId, pendingToken) {\r\n        var _this = _super.call(this, providerId, providerId) || this;\r\n        _this.pendingToken = pendingToken;\r\n        return _this;\r\n    }\r\n    /** @internal */\r\n    SAMLAuthCredential.prototype._getIdTokenResponse = function (auth) {\r\n        var request = this.buildRequest();\r\n        return signInWithIdp(auth, request);\r\n    };\r\n    /** @internal */\r\n    SAMLAuthCredential.prototype._linkToIdToken = function (auth, idToken) {\r\n        var request = this.buildRequest();\r\n        request.idToken = idToken;\r\n        return signInWithIdp(auth, request);\r\n    };\r\n    /** @internal */\r\n    SAMLAuthCredential.prototype._getReauthenticationResolver = function (auth) {\r\n        var request = this.buildRequest();\r\n        request.autoCreate = false;\r\n        return signInWithIdp(auth, request);\r\n    };\r\n    /** {@inheritdoc AuthCredential.toJSON}  */\r\n    SAMLAuthCredential.prototype.toJSON = function () {\r\n        return {\r\n            signInMethod: this.signInMethod,\r\n            providerId: this.providerId,\r\n            pendingToken: this.pendingToken\r\n        };\r\n    };\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\r\n    SAMLAuthCredential.fromJSON = function (json) {\r\n        var obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        var providerId = obj.providerId, signInMethod = obj.signInMethod, pendingToken = obj.pendingToken;\r\n        if (!providerId ||\r\n            !signInMethod ||\r\n            !pendingToken ||\r\n            providerId !== signInMethod) {\r\n            return null;\r\n        }\r\n        return new SAMLAuthCredential(providerId, pendingToken);\r\n    };\r\n    /**\r\n     * Helper static method to avoid exposing the constructor to end users.\r\n     *\r\n     * @internal\r\n     */\r\n    SAMLAuthCredential._create = function (providerId, pendingToken) {\r\n        return new SAMLAuthCredential(providerId, pendingToken);\r\n    };\r\n    SAMLAuthCredential.prototype.buildRequest = function () {\r\n        return {\r\n            requestUri: IDP_REQUEST_URI,\r\n            returnSecureToken: true,\r\n            pendingToken: this.pendingToken\r\n        };\r\n    };\r\n    return SAMLAuthCredential;\r\n}(AuthCredential));\r\nexport { SAMLAuthCredential };\r\n//# sourceMappingURL=saml.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/authentication/idp.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/credentials/auth_credential.ts"],"map":"{\"version\":3,\"file\":\"saml.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/credentials/saml.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAEH;;;;GAIG;AAEH,OAAO,EACL,aAAa,EAEd,MAAM,8BAA8B,CAAC;AAGtC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,IAAM,eAAe,GAAG,kBAAkB,CAAC;AAE3C;;GAEG;AACH;IAAwC,sCAAc;IACpD,gBAAgB;IAChB,4BACE,UAAkB,EACD,YAAoB;QAFvC,YAIE,kBAAM,UAAU,EAAE,UAAU,CAAC,SAC9B;QAHkB,kBAAY,GAAZ,YAAY,CAAQ;;IAGvC,CAAC;IAED,gBAAgB;IAChB,gDAAmB,GAAnB,UAAoB,IAAkB;QACpC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACpC,OAAO,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,gBAAgB;IAChB,2CAAc,GAAd,UACE,IAAkB,EAClB,OAAe;QAEf,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACpC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1B,OAAO,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,gBAAgB;IAChB,yDAA4B,GAA5B,UAA6B,IAAkB;QAC7C,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACpC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC;QAC3B,OAAO,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,2CAA2C;IAC3C,mCAAM,GAAN;QACE,OAAO;YACL,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACI,2BAAQ,GAAf,UAAgB,IAAqB;QACnC,IAAM,GAAG,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACvD,IAAA,UAAU,GAChB,GAAG,WADa,EAAE,YAAY,GAC9B,GAAG,aAD2B,EAAE,YAAY,GAC5C,GAAG,aADyC,CACxC;QACN,IACE,CAAC,UAAU;YACX,CAAC,YAAY;YACb,CAAC,YAAY;YACb,UAAU,KAAK,YAAY,EAC3B;YACA,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,kBAAkB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IAC1D,CAAC;IAED;;;;OAIG;IACI,0BAAO,GAAd,UAAe,UAAkB,EAAE,YAAoB;QACrD,OAAO,IAAI,kBAAkB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IAC1D,CAAC;IAEO,yCAAY,GAApB;QACE,OAAO;YACL,UAAU,EAAE,eAAe;YAC3B,iBAAiB,EAAE,IAAI;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;IACJ,CAAC;IACH,yBAAC;AAAD,CAAC,AAlFD,CAAwC,cAAc,GAkFrD\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/credentials/saml.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { IdTokenResponse } from '../../model/id_token';\r\nimport { AuthCredential } from './auth_credential';\r\n/**\r\n * @public\r\n */\r\nexport declare class SAMLAuthCredential extends AuthCredential {\r\n    private readonly pendingToken;\r\n    /** @internal */\r\n    private constructor();\r\n    /** @internal */\r\n    _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse>;\r\n    /** @internal */\r\n    _linkToIdToken(auth: AuthInternal, idToken: string): Promise<IdTokenResponse>;\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse>;\r\n    /** {@inheritdoc AuthCredential.toJSON}  */\r\n    toJSON(): object;\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json: string | object): SAMLAuthCredential | null;\r\n    /**\r\n     * Helper static method to avoid exposing the constructor to end users.\r\n     *\r\n     * @internal\r\n     */\r\n    static _create(providerId: string, pendingToken: string): SAMLAuthCredential;\r\n    private buildRequest;\r\n}\r\n"}}

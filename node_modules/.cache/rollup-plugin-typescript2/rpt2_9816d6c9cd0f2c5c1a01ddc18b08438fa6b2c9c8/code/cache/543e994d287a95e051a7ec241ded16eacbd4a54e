{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { createSubscribe, ErrorFactory, getModularInstance } from '@firebase/util';\r\nimport { _DEFAULT_AUTH_ERROR_FACTORY } from '../errors';\r\nimport { PersistenceUserManager } from '../persistence/persistence_user_manager';\r\nimport { _reloadWithoutSaving } from '../user/reload';\r\nimport { _assert } from '../util/assert';\r\nimport { _getInstance } from '../util/instantiator';\r\nimport { _getUserLanguage } from '../util/navigator';\r\nimport { _getClientVersion } from '../util/version';\r\nimport { AuthMiddlewareQueue } from './middleware';\r\nimport { _logWarn } from '../util/log';\r\nimport { _getPasswordPolicy } from '../../api/password_policy/get_password_policy';\r\nimport { PasswordPolicyImpl } from './password_policy_impl';\r\nvar AuthImpl = /** @class */ (function () {\r\n    function AuthImpl(app, heartbeatServiceProvider, appCheckServiceProvider, config) {\r\n        this.app = app;\r\n        this.heartbeatServiceProvider = heartbeatServiceProvider;\r\n        this.appCheckServiceProvider = appCheckServiceProvider;\r\n        this.config = config;\r\n        this.currentUser = null;\r\n        this.emulatorConfig = null;\r\n        this.operations = Promise.resolve();\r\n        this.authStateSubscription = new Subscription(this);\r\n        this.idTokenSubscription = new Subscription(this);\r\n        this.beforeStateQueue = new AuthMiddlewareQueue(this);\r\n        this.redirectUser = null;\r\n        this.isProactiveRefreshEnabled = false;\r\n        this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION = 1;\r\n        // Any network calls will set this to true and prevent subsequent emulator\r\n        // initialization\r\n        this._canInitEmulator = true;\r\n        this._isInitialized = false;\r\n        this._deleted = false;\r\n        this._initializationPromise = null;\r\n        this._popupRedirectResolver = null;\r\n        this._errorFactory = _DEFAULT_AUTH_ERROR_FACTORY;\r\n        this._agentRecaptchaConfig = null;\r\n        this._tenantRecaptchaConfigs = {};\r\n        this._projectPasswordPolicy = null;\r\n        this._tenantPasswordPolicies = {};\r\n        // Tracks the last notified UID for state change listeners to prevent\r\n        // repeated calls to the callbacks. Undefined means it's never been\r\n        // called, whereas null means it's been called with a signed out user\r\n        this.lastNotifiedUid = undefined;\r\n        this.languageCode = null;\r\n        this.tenantId = null;\r\n        this.settings = { appVerificationDisabledForTesting: false };\r\n        this.frameworks = [];\r\n        this.name = app.name;\r\n        this.clientVersion = config.sdkClientVersion;\r\n    }\r\n    AuthImpl.prototype._initializeWithPersistence = function (persistenceHierarchy, popupRedirectResolver) {\r\n        var _this = this;\r\n        if (popupRedirectResolver) {\r\n            this._popupRedirectResolver = _getInstance(popupRedirectResolver);\r\n        }\r\n        // Have to check for app deletion throughout initialization (after each\r\n        // promise resolution)\r\n        this._initializationPromise = this.queue(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a, e_1;\r\n            var _b, _c;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        if (this._deleted) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a = this;\r\n                        return [4 /*yield*/, PersistenceUserManager.create(this, persistenceHierarchy)];\r\n                    case 1:\r\n                        _a.persistenceManager = _d.sent();\r\n                        if (this._deleted) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!((_b = this._popupRedirectResolver) === null || _b === void 0 ? void 0 : _b._shouldInitProactively)) return [3 /*break*/, 5];\r\n                        _d.label = 2;\r\n                    case 2:\r\n                        _d.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this._popupRedirectResolver._initialize(this)];\r\n                    case 3:\r\n                        _d.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_1 = _d.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [4 /*yield*/, this.initializeCurrentUser(popupRedirectResolver)];\r\n                    case 6:\r\n                        _d.sent();\r\n                        this.lastNotifiedUid = ((_c = this.currentUser) === null || _c === void 0 ? void 0 : _c.uid) || null;\r\n                        if (this._deleted) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this._isInitialized = true;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n        return this._initializationPromise;\r\n    };\r\n    /**\r\n     * If the persistence is changed in another window, the user manager will let us know\r\n     */\r\n    AuthImpl.prototype._onStorageEvent = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var user;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._deleted) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.assertedPersistence.getCurrentUser()];\r\n                    case 1:\r\n                        user = _a.sent();\r\n                        if (!this.currentUser && !user) {\r\n                            // No change, do nothing (was signed out and remained signed out).\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!(this.currentUser && user && this.currentUser.uid === user.uid)) return [3 /*break*/, 3];\r\n                        // Data update, simply copy data changes.\r\n                        this._currentUser._assign(user);\r\n                        // If tokens changed from previous user tokens, this will trigger\r\n                        // notifyAuthListeners_.\r\n                        return [4 /*yield*/, this.currentUser.getIdToken()];\r\n                    case 2:\r\n                        // If tokens changed from previous user tokens, this will trigger\r\n                        // notifyAuthListeners_.\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 3: \r\n                    // Update current Auth state. Either a new login or logout.\r\n                    // Skip blocking callbacks, they should not apply to a change in another tab.\r\n                    return [4 /*yield*/, this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true)];\r\n                    case 4:\r\n                        // Update current Auth state. Either a new login or logout.\r\n                        // Skip blocking callbacks, they should not apply to a change in another tab.\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.initializeCurrentUser = function (popupRedirectResolver) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var previouslyStoredUser, futureCurrentUser, needsTocheckMiddleware, redirectUserEventId, storedUserEventId, result, e_2;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.assertedPersistence.getCurrentUser()];\r\n                    case 1:\r\n                        previouslyStoredUser = (_b.sent());\r\n                        futureCurrentUser = previouslyStoredUser;\r\n                        needsTocheckMiddleware = false;\r\n                        if (!(popupRedirectResolver && this.config.authDomain)) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.getOrInitRedirectPersistenceManager()];\r\n                    case 2:\r\n                        _b.sent();\r\n                        redirectUserEventId = (_a = this.redirectUser) === null || _a === void 0 ? void 0 : _a._redirectEventId;\r\n                        storedUserEventId = futureCurrentUser === null || futureCurrentUser === void 0 ? void 0 : futureCurrentUser._redirectEventId;\r\n                        return [4 /*yield*/, this.tryRedirectSignIn(popupRedirectResolver)];\r\n                    case 3:\r\n                        result = _b.sent();\r\n                        // If the stored user (i.e. the old \"currentUser\") has a redirectId that\r\n                        // matches the redirect user, then we want to initially sign in with the\r\n                        // new user object from result.\r\n                        // TODO(samgho): More thoroughly test all of this\r\n                        if ((!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\r\n                            (result === null || result === void 0 ? void 0 : result.user)) {\r\n                            futureCurrentUser = result.user;\r\n                            needsTocheckMiddleware = true;\r\n                        }\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        // If no user in persistence, there is no current user. Set to null.\r\n                        if (!futureCurrentUser) {\r\n                            return [2 /*return*/, this.directlySetCurrentUser(null)];\r\n                        }\r\n                        if (!!futureCurrentUser._redirectEventId) return [3 /*break*/, 9];\r\n                        if (!needsTocheckMiddleware) return [3 /*break*/, 8];\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        _b.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, this.beforeStateQueue.runMiddleware(futureCurrentUser)];\r\n                    case 6:\r\n                        _b.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _b.sent();\r\n                        futureCurrentUser = previouslyStoredUser;\r\n                        // We know this is available since the bit is only set when the\r\n                        // resolver is available\r\n                        this._popupRedirectResolver._overrideRedirectResult(this, function () {\r\n                            return Promise.reject(e_2);\r\n                        });\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        if (futureCurrentUser) {\r\n                            return [2 /*return*/, this.reloadAndSetCurrentUserOrClear(futureCurrentUser)];\r\n                        }\r\n                        else {\r\n                            return [2 /*return*/, this.directlySetCurrentUser(null)];\r\n                        }\r\n                        _b.label = 9;\r\n                    case 9:\r\n                        _assert(this._popupRedirectResolver, this, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n                        return [4 /*yield*/, this.getOrInitRedirectPersistenceManager()];\r\n                    case 10:\r\n                        _b.sent();\r\n                        // If the redirect user's event ID matches the current user's event ID,\r\n                        // DO NOT reload the current user, otherwise they'll be cleared from storage.\r\n                        // This is important for the reauthenticateWithRedirect() flow.\r\n                        if (this.redirectUser &&\r\n                            this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId) {\r\n                            return [2 /*return*/, this.directlySetCurrentUser(futureCurrentUser)];\r\n                        }\r\n                        return [2 /*return*/, this.reloadAndSetCurrentUserOrClear(futureCurrentUser)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.tryRedirectSignIn = function (redirectResolver) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        result = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 5]);\r\n                        return [4 /*yield*/, this._popupRedirectResolver._completeRedirectFn(this, redirectResolver, true)];\r\n                    case 2:\r\n                        // We know this._popupRedirectResolver is set since redirectResolver\r\n                        // is passed in. The _completeRedirectFn expects the unwrapped extern.\r\n                        result = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3:\r\n                        e_3 = _a.sent();\r\n                        // Swallow any errors here; the code can retrieve them in\r\n                        // getRedirectResult().\r\n                        return [4 /*yield*/, this._setRedirectUser(null)];\r\n                    case 4:\r\n                        // Swallow any errors here; the code can retrieve them in\r\n                        // getRedirectResult().\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.reloadAndSetCurrentUserOrClear = function (user) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, _reloadWithoutSaving(user)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_4 = _a.sent();\r\n                        if ((e_4 === null || e_4 === void 0 ? void 0 : e_4.code) !==\r\n                            \"auth/\".concat(\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */)) {\r\n                            // Something's wrong with the user's token. Log them out and remove\r\n                            // them from storage\r\n                            return [2 /*return*/, this.directlySetCurrentUser(null)];\r\n                        }\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/, this.directlySetCurrentUser(user)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.useDeviceLanguage = function () {\r\n        this.languageCode = _getUserLanguage();\r\n    };\r\n    AuthImpl.prototype._delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this._deleted = true;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.updateCurrentUser = function (userExtern) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var user;\r\n            return __generator(this, function (_a) {\r\n                user = userExtern\r\n                    ? getModularInstance(userExtern)\r\n                    : null;\r\n                if (user) {\r\n                    _assert(user.auth.config.apiKey === this.config.apiKey, this, \"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */);\r\n                }\r\n                return [2 /*return*/, this._updateCurrentUser(user && user._clone(this))];\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype._updateCurrentUser = function (user, skipBeforeStateCallbacks) {\r\n        if (skipBeforeStateCallbacks === void 0) { skipBeforeStateCallbacks = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._deleted) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (user) {\r\n                            _assert(this.tenantId === user.tenantId, this, \"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */);\r\n                        }\r\n                        if (!!skipBeforeStateCallbacks) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.beforeStateQueue.runMiddleware(user)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, this.queue(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this.directlySetCurrentUser(user)];\r\n                                    case 1:\r\n                                        _a.sent();\r\n                                        this.notifyAuthListeners();\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.signOut = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Run first, to block _setRedirectUser() if any callbacks fail.\r\n                    return [4 /*yield*/, this.beforeStateQueue.runMiddleware(null)];\r\n                    case 1:\r\n                        // Run first, to block _setRedirectUser() if any callbacks fail.\r\n                        _a.sent();\r\n                        if (!(this.redirectPersistenceManager || this._popupRedirectResolver)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this._setRedirectUser(null)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: \r\n                    // Prevent callbacks from being called again in _updateCurrentUser, as\r\n                    // they were already called in the first line.\r\n                    return [2 /*return*/, this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.setPersistence = function (persistence) {\r\n        var _this = this;\r\n        return this.queue(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.assertedPersistence.setPersistence(_getInstance(persistence))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    AuthImpl.prototype._getRecaptchaConfig = function () {\r\n        if (this.tenantId == null) {\r\n            return this._agentRecaptchaConfig;\r\n        }\r\n        else {\r\n            return this._tenantRecaptchaConfigs[this.tenantId];\r\n        }\r\n    };\r\n    AuthImpl.prototype.validatePassword = function (password) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var passwordPolicy;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this._getPasswordPolicyInternal()) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this._updatePasswordPolicy()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        passwordPolicy = this._getPasswordPolicyInternal();\r\n                        // Check that the policy schema version is supported by the SDK.\r\n                        // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\r\n                        if (passwordPolicy.schemaVersion !==\r\n                            this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION) {\r\n                            return [2 /*return*/, Promise.reject(this._errorFactory.create(\"unsupported-password-policy-schema-version\" /* AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION */, {}))];\r\n                        }\r\n                        return [2 /*return*/, passwordPolicy.validatePassword(password)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype._getPasswordPolicyInternal = function () {\r\n        if (this.tenantId === null) {\r\n            return this._projectPasswordPolicy;\r\n        }\r\n        else {\r\n            return this._tenantPasswordPolicies[this.tenantId];\r\n        }\r\n    };\r\n    AuthImpl.prototype._updatePasswordPolicy = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, passwordPolicy;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, _getPasswordPolicy(this)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        passwordPolicy = new PasswordPolicyImpl(response);\r\n                        if (this.tenantId === null) {\r\n                            this._projectPasswordPolicy = passwordPolicy;\r\n                        }\r\n                        else {\r\n                            this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype._getPersistence = function () {\r\n        return this.assertedPersistence.persistence.type;\r\n    };\r\n    AuthImpl.prototype._updateErrorMap = function (errorMap) {\r\n        this._errorFactory = new ErrorFactory('auth', 'Firebase', errorMap());\r\n    };\r\n    AuthImpl.prototype.onAuthStateChanged = function (nextOrObserver, error, completed) {\r\n        return this.registerStateListener(this.authStateSubscription, nextOrObserver, error, completed);\r\n    };\r\n    AuthImpl.prototype.beforeAuthStateChanged = function (callback, onAbort) {\r\n        return this.beforeStateQueue.pushCallback(callback, onAbort);\r\n    };\r\n    AuthImpl.prototype.onIdTokenChanged = function (nextOrObserver, error, completed) {\r\n        return this.registerStateListener(this.idTokenSubscription, nextOrObserver, error, completed);\r\n    };\r\n    AuthImpl.prototype.authStateReady = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.currentUser) {\r\n                resolve();\r\n            }\r\n            else {\r\n                var unsubscribe_1 = _this.onAuthStateChanged(function () {\r\n                    unsubscribe_1();\r\n                    resolve();\r\n                }, reject);\r\n            }\r\n        });\r\n    };\r\n    AuthImpl.prototype.toJSON = function () {\r\n        var _a;\r\n        return {\r\n            apiKey: this.config.apiKey,\r\n            authDomain: this.config.authDomain,\r\n            appName: this.name,\r\n            currentUser: (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.toJSON()\r\n        };\r\n    };\r\n    AuthImpl.prototype._setRedirectUser = function (user, popupRedirectResolver) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var redirectManager;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getOrInitRedirectPersistenceManager(popupRedirectResolver)];\r\n                    case 1:\r\n                        redirectManager = _a.sent();\r\n                        return [2 /*return*/, user === null\r\n                                ? redirectManager.removeCurrentUser()\r\n                                : redirectManager.setCurrentUser(user)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.getOrInitRedirectPersistenceManager = function (popupRedirectResolver) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var resolver, _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.redirectPersistenceManager) return [3 /*break*/, 3];\r\n                        resolver = (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\r\n                            this._popupRedirectResolver;\r\n                        _assert(resolver, this, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n                        _a = this;\r\n                        return [4 /*yield*/, PersistenceUserManager.create(this, [_getInstance(resolver._redirectPersistence)], \"redirectUser\" /* KeyName.REDIRECT_USER */)];\r\n                    case 1:\r\n                        _a.redirectPersistenceManager = _c.sent();\r\n                        _b = this;\r\n                        return [4 /*yield*/, this.redirectPersistenceManager.getCurrentUser()];\r\n                    case 2:\r\n                        _b.redirectUser =\r\n                            _c.sent();\r\n                        _c.label = 3;\r\n                    case 3: return [2 /*return*/, this.redirectPersistenceManager];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype._redirectUserForId = function (id) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!this._isInitialized) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.queue(function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                                return [2 /*return*/];\r\n                            }); }); })];\r\n                    case 1:\r\n                        _c.sent();\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        if (((_a = this._currentUser) === null || _a === void 0 ? void 0 : _a._redirectEventId) === id) {\r\n                            return [2 /*return*/, this._currentUser];\r\n                        }\r\n                        if (((_b = this.redirectUser) === null || _b === void 0 ? void 0 : _b._redirectEventId) === id) {\r\n                            return [2 /*return*/, this.redirectUser];\r\n                        }\r\n                        return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype._persistUserIfCurrent = function (user) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (user === this.currentUser) {\r\n                    return [2 /*return*/, this.queue(function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                            return [2 /*return*/, this.directlySetCurrentUser(user)];\r\n                        }); }); })];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /** Notifies listeners only if the user is current */\r\n    AuthImpl.prototype._notifyListenersIfCurrent = function (user) {\r\n        if (user === this.currentUser) {\r\n            this.notifyAuthListeners();\r\n        }\r\n    };\r\n    AuthImpl.prototype._key = function () {\r\n        return \"\".concat(this.config.authDomain, \":\").concat(this.config.apiKey, \":\").concat(this.name);\r\n    };\r\n    AuthImpl.prototype._startProactiveRefresh = function () {\r\n        this.isProactiveRefreshEnabled = true;\r\n        if (this.currentUser) {\r\n            this._currentUser._startProactiveRefresh();\r\n        }\r\n    };\r\n    AuthImpl.prototype._stopProactiveRefresh = function () {\r\n        this.isProactiveRefreshEnabled = false;\r\n        if (this.currentUser) {\r\n            this._currentUser._stopProactiveRefresh();\r\n        }\r\n    };\r\n    Object.defineProperty(AuthImpl.prototype, \"_currentUser\", {\r\n        /** Returns the current user cast as the internal type */\r\n        get: function () {\r\n            return this.currentUser;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    AuthImpl.prototype.notifyAuthListeners = function () {\r\n        var _a, _b;\r\n        if (!this._isInitialized) {\r\n            return;\r\n        }\r\n        this.idTokenSubscription.next(this.currentUser);\r\n        var currentUid = (_b = (_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : null;\r\n        if (this.lastNotifiedUid !== currentUid) {\r\n            this.lastNotifiedUid = currentUid;\r\n            this.authStateSubscription.next(this.currentUser);\r\n        }\r\n    };\r\n    AuthImpl.prototype.registerStateListener = function (subscription, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        if (this._deleted) {\r\n            return function () { };\r\n        }\r\n        var cb = typeof nextOrObserver === 'function'\r\n            ? nextOrObserver\r\n            : nextOrObserver.next.bind(nextOrObserver);\r\n        var isUnsubscribed = false;\r\n        var promise = this._isInitialized\r\n            ? Promise.resolve()\r\n            : this._initializationPromise;\r\n        _assert(promise, this, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        // The callback needs to be called asynchronously per the spec.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        promise.then(function () {\r\n            if (isUnsubscribed) {\r\n                return;\r\n            }\r\n            cb(_this.currentUser);\r\n        });\r\n        if (typeof nextOrObserver === 'function') {\r\n            var unsubscribe_2 = subscription.addObserver(nextOrObserver, error, completed);\r\n            return function () {\r\n                isUnsubscribed = true;\r\n                unsubscribe_2();\r\n            };\r\n        }\r\n        else {\r\n            var unsubscribe_3 = subscription.addObserver(nextOrObserver);\r\n            return function () {\r\n                isUnsubscribed = true;\r\n                unsubscribe_3();\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * Unprotected (from race conditions) method to set the current user. This\r\n     * should only be called from within a queued callback. This is necessary\r\n     * because the queue shouldn't rely on another queued callback.\r\n     */\r\n    AuthImpl.prototype.directlySetCurrentUser = function (user) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.currentUser && this.currentUser !== user) {\r\n                            this._currentUser._stopProactiveRefresh();\r\n                        }\r\n                        if (user && this.isProactiveRefreshEnabled) {\r\n                            user._startProactiveRefresh();\r\n                        }\r\n                        this.currentUser = user;\r\n                        if (!user) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.assertedPersistence.setCurrentUser(user)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, this.assertedPersistence.removeCurrentUser()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        _a.label = 4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype.queue = function (action) {\r\n        // In case something errors, the callback still should be called in order\r\n        // to keep the promise chain alive\r\n        this.operations = this.operations.then(action, action);\r\n        return this.operations;\r\n    };\r\n    Object.defineProperty(AuthImpl.prototype, \"assertedPersistence\", {\r\n        get: function () {\r\n            _assert(this.persistenceManager, this, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n            return this.persistenceManager;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    AuthImpl.prototype._logFramework = function (framework) {\r\n        if (!framework || this.frameworks.includes(framework)) {\r\n            return;\r\n        }\r\n        this.frameworks.push(framework);\r\n        // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\r\n        // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\r\n        this.frameworks.sort();\r\n        this.clientVersion = _getClientVersion(this.config.clientPlatform, this._getFrameworks());\r\n    };\r\n    AuthImpl.prototype._getFrameworks = function () {\r\n        return this.frameworks;\r\n    };\r\n    AuthImpl.prototype._getAdditionalHeaders = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var headers, heartbeatsHeader, appCheckToken;\r\n            var _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        headers = (_b = {},\r\n                            _b[\"X-Client-Version\" /* HttpHeader.X_CLIENT_VERSION */] = this.clientVersion,\r\n                            _b);\r\n                        if (this.app.options.appId) {\r\n                            headers[\"X-Firebase-gmpid\" /* HttpHeader.X_FIREBASE_GMPID */] = this.app.options.appId;\r\n                        }\r\n                        return [4 /*yield*/, ((_a = this.heartbeatServiceProvider\r\n                                .getImmediate({\r\n                                optional: true\r\n                            })) === null || _a === void 0 ? void 0 : _a.getHeartbeatsHeader())];\r\n                    case 1:\r\n                        heartbeatsHeader = _c.sent();\r\n                        if (heartbeatsHeader) {\r\n                            headers[\"X-Firebase-Client\" /* HttpHeader.X_FIREBASE_CLIENT */] = heartbeatsHeader;\r\n                        }\r\n                        return [4 /*yield*/, this._getAppCheckToken()];\r\n                    case 2:\r\n                        appCheckToken = _c.sent();\r\n                        if (appCheckToken) {\r\n                            headers[\"X-Firebase-AppCheck\" /* HttpHeader.X_FIREBASE_APP_CHECK */] = appCheckToken;\r\n                        }\r\n                        return [2 /*return*/, headers];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthImpl.prototype._getAppCheckToken = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheckTokenResult;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, ((_a = this.appCheckServiceProvider\r\n                            .getImmediate({ optional: true })) === null || _a === void 0 ? void 0 : _a.getToken())];\r\n                    case 1:\r\n                        appCheckTokenResult = _b.sent();\r\n                        if (appCheckTokenResult === null || appCheckTokenResult === void 0 ? void 0 : appCheckTokenResult.error) {\r\n                            // Context: appCheck.getToken() will never throw even if an error happened.\r\n                            // In the error case, a dummy token will be returned along with an error field describing\r\n                            // the error. In general, we shouldn't care about the error condition and just use\r\n                            // the token (actual or dummy) to send requests.\r\n                            _logWarn(\"Error while retrieving App Check token: \".concat(appCheckTokenResult.error));\r\n                        }\r\n                        return [2 /*return*/, appCheckTokenResult === null || appCheckTokenResult === void 0 ? void 0 : appCheckTokenResult.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return AuthImpl;\r\n}());\r\nexport { AuthImpl };\r\n/**\r\n * Method to be used to cast down to our private implmentation of Auth.\r\n * It will also handle unwrapping from the compat type if necessary\r\n *\r\n * @param auth Auth object passed in from developer\r\n */\r\nexport function _castAuth(auth) {\r\n    return getModularInstance(auth);\r\n}\r\n/** Helper class to wrap subscriber logic */\r\nvar Subscription = /** @class */ (function () {\r\n    function Subscription(auth) {\r\n        var _this = this;\r\n        this.auth = auth;\r\n        this.observer = null;\r\n        this.addObserver = createSubscribe(function (observer) { return (_this.observer = observer); });\r\n    }\r\n    Object.defineProperty(Subscription.prototype, \"next\", {\r\n        get: function () {\r\n            _assert(this.observer, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n            return this.observer.next.bind(this.observer);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Subscription;\r\n}());\r\n//# sourceMappingURL=auth_impl.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/app/dist/app/src/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/component/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/app-check-interop-types/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/popup_redirect.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/persistence/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/persistence/persistence_user_manager.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/reload.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/instantiator.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/navigator.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/version.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/middleware.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/recaptcha/recaptcha.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/log.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/password_policy/get_password_policy.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/password_policy.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/password_policy_impl.ts"],"map":"{\"version\":3,\"file\":\"auth_impl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/auth/auth_impl.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/auth/auth_impl.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { _FirebaseService, FirebaseApp } from '@firebase/app';\r\nimport { Provider } from '@firebase/component';\r\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\r\nimport { Auth, AuthErrorMap, AuthSettings, EmulatorConfig, NextOrObserver, Persistence, PopupRedirectResolver, User, CompleteFn, ErrorFn, Unsubscribe, PasswordValidationStatus } from '../../model/public_types';\r\nimport { ErrorFactory } from '@firebase/util';\r\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\r\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\r\nimport { UserInternal } from '../../model/user';\r\nimport { AuthErrorCode, AuthErrorParams } from '../errors';\r\nimport { PersistenceInternal } from '../persistence';\r\nimport { RecaptchaConfig } from '../../platform_browser/recaptcha/recaptcha';\r\nimport { PasswordPolicyInternal } from '../../model/password_policy';\r\nexport declare const enum DefaultConfig {\r\n    TOKEN_API_HOST = \"securetoken.googleapis.com\",\r\n    API_HOST = \"identitytoolkit.googleapis.com\",\r\n    API_SCHEME = \"https\"\r\n}\r\nexport declare class AuthImpl implements AuthInternal, _FirebaseService {\r\n    readonly app: FirebaseApp;\r\n    private readonly heartbeatServiceProvider;\r\n    private readonly appCheckServiceProvider;\r\n    readonly config: ConfigInternal;\r\n    currentUser: User | null;\r\n    emulatorConfig: EmulatorConfig | null;\r\n    private operations;\r\n    private persistenceManager?;\r\n    private redirectPersistenceManager?;\r\n    private authStateSubscription;\r\n    private idTokenSubscription;\r\n    private readonly beforeStateQueue;\r\n    private redirectUser;\r\n    private isProactiveRefreshEnabled;\r\n    private readonly EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION;\r\n    _canInitEmulator: boolean;\r\n    _isInitialized: boolean;\r\n    _deleted: boolean;\r\n    _initializationPromise: Promise<void> | null;\r\n    _popupRedirectResolver: PopupRedirectResolverInternal | null;\r\n    _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams>;\r\n    _agentRecaptchaConfig: RecaptchaConfig | null;\r\n    _tenantRecaptchaConfigs: Record<string, RecaptchaConfig>;\r\n    _projectPasswordPolicy: PasswordPolicyInternal | null;\r\n    _tenantPasswordPolicies: Record<string, PasswordPolicyInternal>;\r\n    readonly name: string;\r\n    private lastNotifiedUid;\r\n    languageCode: string | null;\r\n    tenantId: string | null;\r\n    settings: AuthSettings;\r\n    constructor(app: FirebaseApp, heartbeatServiceProvider: Provider<'heartbeat'>, appCheckServiceProvider: Provider<AppCheckInternalComponentName>, config: ConfigInternal);\r\n    _initializeWithPersistence(persistenceHierarchy: PersistenceInternal[], popupRedirectResolver?: PopupRedirectResolver): Promise<void>;\r\n    /**\r\n     * If the persistence is changed in another window, the user manager will let us know\r\n     */\r\n    _onStorageEvent(): Promise<void>;\r\n    private initializeCurrentUser;\r\n    private tryRedirectSignIn;\r\n    private reloadAndSetCurrentUserOrClear;\r\n    useDeviceLanguage(): void;\r\n    _delete(): Promise<void>;\r\n    updateCurrentUser(userExtern: User | null): Promise<void>;\r\n    _updateCurrentUser(user: User | null, skipBeforeStateCallbacks?: boolean): Promise<void>;\r\n    signOut(): Promise<void>;\r\n    setPersistence(persistence: Persistence): Promise<void>;\r\n    _getRecaptchaConfig(): RecaptchaConfig | null;\r\n    validatePassword(password: string): Promise<PasswordValidationStatus>;\r\n    _getPasswordPolicyInternal(): PasswordPolicyInternal | null;\r\n    _updatePasswordPolicy(): Promise<void>;\r\n    _getPersistence(): string;\r\n    _updateErrorMap(errorMap: AuthErrorMap): void;\r\n    onAuthStateChanged(nextOrObserver: NextOrObserver<User>, error?: ErrorFn, completed?: CompleteFn): Unsubscribe;\r\n    beforeAuthStateChanged(callback: (user: User | null) => void | Promise<void>, onAbort?: () => void): Unsubscribe;\r\n    onIdTokenChanged(nextOrObserver: NextOrObserver<User>, error?: ErrorFn, completed?: CompleteFn): Unsubscribe;\r\n    authStateReady(): Promise<void>;\r\n    toJSON(): object;\r\n    _setRedirectUser(user: UserInternal | null, popupRedirectResolver?: PopupRedirectResolver): Promise<void>;\r\n    private getOrInitRedirectPersistenceManager;\r\n    _redirectUserForId(id: string): Promise<UserInternal | null>;\r\n    _persistUserIfCurrent(user: UserInternal): Promise<void>;\r\n    /** Notifies listeners only if the user is current */\r\n    _notifyListenersIfCurrent(user: UserInternal): void;\r\n    _key(): string;\r\n    _startProactiveRefresh(): void;\r\n    _stopProactiveRefresh(): void;\r\n    /** Returns the current user cast as the internal type */\r\n    get _currentUser(): UserInternal;\r\n    private notifyAuthListeners;\r\n    private registerStateListener;\r\n    /**\r\n     * Unprotected (from race conditions) method to set the current user. This\r\n     * should only be called from within a queued callback. This is necessary\r\n     * because the queue shouldn't rely on another queued callback.\r\n     */\r\n    private directlySetCurrentUser;\r\n    private queue;\r\n    private get assertedPersistence();\r\n    private frameworks;\r\n    private clientVersion;\r\n    _logFramework(framework: string): void;\r\n    _getFrameworks(): readonly string[];\r\n    _getAdditionalHeaders(): Promise<Record<string, string>>;\r\n    _getAppCheckToken(): Promise<string | undefined>;\r\n}\r\n/**\r\n * Method to be used to cast down to our private implmentation of Auth.\r\n * It will also handle unwrapping from the compat type if necessary\r\n *\r\n * @param auth Auth object passed in from developer\r\n */\r\nexport declare function _castAuth(auth: Auth): AuthInternal;\r\n"}}

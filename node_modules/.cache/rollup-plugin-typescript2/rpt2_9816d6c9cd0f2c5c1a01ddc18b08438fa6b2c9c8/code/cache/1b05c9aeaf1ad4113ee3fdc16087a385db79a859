{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { isMobileCordova, isReactNative } from '@firebase/util';\r\nimport { _isOnline } from './navigator';\r\nimport { debugAssert } from './assert';\r\n/**\r\n * A structure to help pick between a range of long and short delay durations\r\n * depending on the current environment. In general, the long delay is used for\r\n * mobile environments whereas short delays are used for desktop environments.\r\n */\r\nvar Delay = /** @class */ (function () {\r\n    function Delay(shortDelay, longDelay) {\r\n        this.shortDelay = shortDelay;\r\n        this.longDelay = longDelay;\r\n        // Internal error when improperly initialized.\r\n        debugAssert(longDelay > shortDelay, 'Short delay should be less than long delay!');\r\n        this.isMobile = isMobileCordova() || isReactNative();\r\n    }\r\n    Delay.prototype.get = function () {\r\n        if (!_isOnline()) {\r\n            // Pick the shorter timeout.\r\n            return Math.min(5000 /* DelayMin.OFFLINE */, this.shortDelay);\r\n        }\r\n        // If running in a mobile environment, return the long delay, otherwise\r\n        // return the short delay.\r\n        // This could be improved in the future to dynamically change based on other\r\n        // variables instead of just reading the current environment.\r\n        return this.isMobile ? this.longDelay : this.shortDelay;\r\n    };\r\n    return Delay;\r\n}());\r\nexport { Delay };\r\n//# sourceMappingURL=delay.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/navigator.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/assert.ts"],"map":"{\"version\":3,\"file\":\"delay.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/util/delay.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAChE,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAMvC;;;;GAIG;AACH;IAIE,eACmB,UAAkB,EAClB,SAAiB;QADjB,eAAU,GAAV,UAAU,CAAQ;QAClB,cAAS,GAAT,SAAS,CAAQ;QAElC,8CAA8C;QAC9C,WAAW,CACT,SAAS,GAAG,UAAU,EACtB,6CAA6C,CAC9C,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,eAAe,EAAE,IAAI,aAAa,EAAE,CAAC;IACvD,CAAC;IAED,mBAAG,GAAH;QACE,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,4BAA4B;YAC5B,OAAO,IAAI,CAAC,GAAG,8BAAmB,IAAI,CAAC,UAAU,CAAC,CAAC;SACpD;QACD,uEAAuE;QACvE,0BAA0B;QAC1B,4EAA4E;QAC5E,6DAA6D;QAC7D,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;IAC1D,CAAC;IACH,YAAC;AAAD,CAAC,AA3BD,IA2BC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/util/delay.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport declare const enum DelayMin {\r\n    OFFLINE = 5000\r\n}\r\n/**\r\n * A structure to help pick between a range of long and short delay durations\r\n * depending on the current environment. In general, the long delay is used for\r\n * mobile environments whereas short delays are used for desktop environments.\r\n */\r\nexport declare class Delay {\r\n    private readonly shortDelay;\r\n    private readonly longDelay;\r\n    private readonly isMobile;\r\n    constructor(shortDelay: number, longDelay: number);\r\n    get(): number;\r\n}\r\n"}}

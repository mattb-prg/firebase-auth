{"code":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { _getProvider, getApp } from '@firebase/app';\r\nimport { _initializeAuthInstance } from './src/core/auth/initialize';\r\nimport { registerAuth } from './src/core/auth/register';\r\nimport { _getInstance } from './src/core/util/instantiator';\r\nimport { indexedDBLocalPersistence } from './src/platform_browser/persistence/indexed_db';\r\n// Core functionality shared by all clients\r\nexport * from './index.shared';\r\n// persistence\r\nexport { indexedDBLocalPersistence } from './src/platform_browser/persistence/indexed_db';\r\nregisterAuth(\"Worker\" /* ClientPlatform.WORKER */);\r\nexport function getAuth(app) {\r\n    if (app === void 0) { app = getApp(); }\r\n    // Unlike the other environments, we need to explicitly check if indexedDb is\r\n    // available. That means doing the whole rigamarole\r\n    var auth = _getProvider(app, \"auth\" /* _ComponentName.AUTH */).getImmediate();\r\n    // This promise is intended to float; auth initialization happens in the\r\n    // background, meanwhile the auth object may be used by the app.\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    _getInstance(indexedDBLocalPersistence)\r\n        ._isAvailable()\r\n        .then(function (avail) {\r\n        var deps = avail ? { persistence: indexedDBLocalPersistence } : {};\r\n        _initializeAuthInstance(auth, deps);\r\n    });\r\n    return auth;\r\n}\r\n//# sourceMappingURL=index.webworker.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/app/dist/app/src/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/auth_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/initialize.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/register.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/persistence/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/instantiator.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/util/version.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/persistence/indexed_db.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/index.shared.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/persistence/indexed_db.ts"],"map":"{\"version\":3,\"file\":\"index.webworker.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../index.webworker.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAE,YAAY,EAAe,MAAM,EAAE,MAAM,eAAe,CAAC;AAIlE,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AACrE,OAAO,EAAkB,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExE,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAE5D,OAAO,EAAE,yBAAyB,EAAE,MAAM,+CAA+C,CAAC;AAE1F,2CAA2C;AAC3C,cAAc,gBAAgB,CAAC;AAE/B,cAAc;AACd,OAAO,EAAE,yBAAyB,EAAE,MAAM,+CAA+C,CAAC;AAE1F,YAAY,sCAAuB,CAAC;AAEpC,MAAM,UAAU,OAAO,CAAC,GAA2B;IAA3B,oBAAA,EAAA,MAAmB,MAAM,EAAE;IACjD,6EAA6E;IAC7E,mDAAmD;IACnD,IAAM,IAAI,GAAG,YAAY,CACvB,GAAG,mCAEJ,CAAC,YAAY,EAAc,CAAC;IAE7B,wEAAwE;IACxE,gEAAgE;IAChE,mEAAmE;IACnE,YAAY,CAAsB,yBAAyB,CAAC;SACzD,YAAY,EAAE;SACd,IAAI,CAAC,UAAA,KAAK;QACT,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,yBAAyB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACrE,uBAAuB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEL,OAAO,IAAI,CAAC;AACd,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/index.webworker.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { FirebaseApp } from '@firebase/app';\r\nimport { Auth } from './src/model/public_types';\r\nexport * from './index.shared';\r\nexport { indexedDBLocalPersistence } from './src/platform_browser/persistence/indexed_db';\r\nexport declare function getAuth(app?: FirebaseApp): Auth;\r\n"}}

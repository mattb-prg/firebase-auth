{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\r\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\r\nimport { _reauthenticate } from '../user/reauthenticate';\r\nimport { UserCredentialImpl } from '../user/user_credential_impl';\r\nimport { _castAuth } from '../auth/auth_impl';\r\nimport { getModularInstance } from '@firebase/util';\r\nexport function _signInWithCredential(auth, credential, bypassAuthState) {\r\n    if (bypassAuthState === void 0) { bypassAuthState = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var operationType, response, userCredential;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    operationType = \"signIn\" /* OperationType.SIGN_IN */;\r\n                    return [4 /*yield*/, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential)];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, UserCredentialImpl._fromIdTokenResponse(auth, operationType, response)];\r\n                case 2:\r\n                    userCredential = _a.sent();\r\n                    if (!!bypassAuthState) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, auth._updateCurrentUser(userCredential.user)];\r\n                case 3:\r\n                    _a.sent();\r\n                    _a.label = 4;\r\n                case 4: return [2 /*return*/, userCredential];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Asynchronously signs in with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nexport function signInWithCredential(auth, credential) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _signInWithCredential(_castAuth(auth), credential)];\r\n        });\r\n    });\r\n}\r\n/**\r\n * Links the user account with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nexport function linkWithCredential(user, credential) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var userInternal;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    userInternal = getModularInstance(user);\r\n                    return [4 /*yield*/, _assertLinkedStatus(false, userInternal, credential.providerId)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/, _link(userInternal, credential)];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Re-authenticates a user using a fresh credential.\r\n *\r\n * @remarks\r\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\r\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\r\n * or a `TOKEN_EXPIRED` error.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nexport function reauthenticateWithCredential(user, credential) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _reauthenticate(getModularInstance(user), credential)];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=credential.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/mfa/mfa_error.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/auth.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/credentials/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/link_unlink.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/reauthenticate.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/user/user_credential_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/auth/auth_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/enums.ts"],"map":"{\"version\":3,\"file\":\"credential.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/strategies/credential.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAIH,OAAO,EAAE,6CAA6C,EAAE,MAAM,qBAAqB,CAAC;AAIpF,OAAO,EAAE,mBAAmB,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,kBAAkB,EAAE,MAAM,gBAAgB,CAAC;AAGpD,MAAM,UAAgB,qBAAqB,CACzC,IAAkB,EAClB,UAA0B,EAC1B,eAAuB;IAAvB,gCAAA,EAAA,uBAAuB;;;;;;oBAEjB,aAAa,uCAAwB,CAAC;oBAC3B,qBAAM,6CAA6C,CAClE,IAAI,EACJ,aAAa,EACb,UAAU,CACX,EAAA;;oBAJK,QAAQ,GAAG,SAIhB;oBACsB,qBAAM,kBAAkB,CAAC,oBAAoB,CAClE,IAAI,EACJ,aAAa,EACb,QAAQ,CACT,EAAA;;oBAJK,cAAc,GAAG,SAItB;yBAEG,CAAC,eAAe,EAAhB,wBAAgB;oBAClB,qBAAM,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,EAAA;;oBAAlD,SAAkD,CAAC;;wBAErD,sBAAO,cAAc,EAAC;;;;CACvB;AAED;;;;;;;;;;GAUG;AACH,MAAM,UAAgB,oBAAoB,CACxC,IAAU,EACV,UAA0B;;;YAE1B,sBAAO,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,EAAC;;;CAC3D;AAED;;;;;;;;;;GAUG;AACH,MAAM,UAAgB,kBAAkB,CACtC,IAAU,EACV,UAA0B;;;;;;oBAEpB,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAiB,CAAC;oBAE9D,qBAAM,mBAAmB,CAAC,KAAK,EAAE,YAAY,EAAE,UAAU,CAAC,UAAU,CAAC,EAAA;;oBAArE,SAAqE,CAAC;oBAEtE,sBAAO,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,EAAC;;;;CACxC;AAED;;;;;;;;;;;;GAYG;AACH,MAAM,UAAgB,4BAA4B,CAChD,IAAU,EACV,UAA0B;;;YAE1B,sBAAO,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAiB,EAAE,UAAU,CAAC,EAAC;;;CAC9E\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/strategies/credential.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { UserCredential, Auth, User } from '../../model/public_types';\r\nimport { AuthInternal } from '../../model/auth';\r\nimport { AuthCredential } from '../credentials';\r\nexport declare function _signInWithCredential(auth: AuthInternal, credential: AuthCredential, bypassAuthState?: boolean): Promise<UserCredential>;\r\n/**\r\n * Asynchronously signs in with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nexport declare function signInWithCredential(auth: Auth, credential: AuthCredential): Promise<UserCredential>;\r\n/**\r\n * Links the user account with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nexport declare function linkWithCredential(user: User, credential: AuthCredential): Promise<UserCredential>;\r\n/**\r\n * Re-authenticates a user using a fresh credential.\r\n *\r\n * @remarks\r\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\r\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\r\n * or a `TOKEN_EXPIRED` error.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nexport declare function reauthenticateWithCredential(user: User, credential: AuthCredential): Promise<UserCredential>;\r\n"}}

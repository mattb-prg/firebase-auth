{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { _addTidIfNecessary, _makeTaggedError, _performApiRequest, _performSignInRequest } from '../index';\r\nexport function sendPhoneVerificationCode(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:sendVerificationCode\" /* Endpoint.SEND_VERIFICATION_CODE */, _addTidIfNecessary(auth, request))];\r\n        });\r\n    });\r\n}\r\nexport function signInWithPhoneNumber(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request))];\r\n        });\r\n    });\r\n}\r\nexport function linkWithPhoneNumber(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request))];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (response.temporaryProof) {\r\n                        throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */, response);\r\n                    }\r\n                    return [2 /*return*/, response];\r\n            }\r\n        });\r\n    });\r\n}\r\nvar VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_ = (_a = {},\r\n    _a[\"USER_NOT_FOUND\" /* ServerError.USER_NOT_FOUND */] = \"user-not-found\" /* AuthErrorCode.USER_DELETED */,\r\n    _a);\r\nexport function verifyPhoneNumberForExisting(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var apiRequest;\r\n        return __generator(this, function (_a) {\r\n            apiRequest = __assign(__assign({}, request), { operation: 'REAUTH' });\r\n            return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, apiRequest), VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_)];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=sms.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/errors.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts"],"map":"{\"version\":3,\"file\":\"sms.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/api/authentication/sms.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;;AAEH,OAAO,EAGL,kBAAkB,EAClB,gBAAgB,EAChB,kBAAkB,EAClB,qBAAqB,EACtB,MAAM,UAAU,CAAC;AAgBlB,MAAM,UAAgB,yBAAyB,CAC7C,IAAU,EACV,OAAyC;;;YAEzC,sBAAO,kBAAkB,CAIvB,IAAI,2GAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,EAAC;;;CACH;AA0BD,MAAM,UAAgB,qBAAqB,CACzC,IAAU,EACV,OAAqC;;;YAErC,sBAAO,qBAAqB,CAI1B,IAAI,+GAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,EAAC;;;CACH;AAED,MAAM,UAAgB,mBAAmB,CACvC,IAAU,EACV,OAAmC;;;;;wBAElB,qBAAM,qBAAqB,CAI1C,IAAI,+GAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,EAAA;;oBARK,QAAQ,GAAG,SAQhB;oBACD,IAAI,QAAQ,CAAC,cAAc,EAAE;wBAC3B,MAAM,gBAAgB,CAAC,IAAI,oFAAmC,QAAQ,CAAC,CAAC;qBACzE;oBACD,sBAAO,QAAQ,EAAC;;;;CACjB;AAOD,IAAM,2CAA2C;IAG/C,yGAAwD;OACzD,CAAC;AAEF,MAAM,UAAgB,4BAA4B,CAChD,IAAU,EACV,OAAqC;;;;YAE/B,UAAU,yBACX,OAAO,KACV,SAAS,EAAE,QAAQ,GACpB,CAAC;YACF,sBAAO,qBAAqB,CAI1B,IAAI,+GAGJ,kBAAkB,CAAC,IAAI,EAAE,UAAU,CAAC,EACpC,2CAA2C,CAC5C,EAAC;;;CACH\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/api/authentication/sms.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { IdTokenResponse } from '../../model/id_token';\r\nimport { Auth } from '../../model/public_types';\r\nexport interface SendPhoneVerificationCodeRequest {\r\n    phoneNumber: string;\r\n    recaptchaToken: string;\r\n    tenantId?: string;\r\n}\r\nexport interface SendPhoneVerificationCodeResponse {\r\n    sessionInfo: string;\r\n}\r\nexport declare function sendPhoneVerificationCode(auth: Auth, request: SendPhoneVerificationCodeRequest): Promise<SendPhoneVerificationCodeResponse>;\r\n/**\r\n * @internal\r\n */\r\nexport interface SignInWithPhoneNumberRequest {\r\n    temporaryProof?: string;\r\n    phoneNumber?: string;\r\n    sessionInfo?: string;\r\n    code?: string;\r\n    tenantId?: string;\r\n}\r\nexport interface LinkWithPhoneNumberRequest extends SignInWithPhoneNumberRequest {\r\n    idToken: string;\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\r\n    temporaryProof?: string;\r\n    phoneNumber?: string;\r\n}\r\nexport declare function signInWithPhoneNumber(auth: Auth, request: SignInWithPhoneNumberRequest): Promise<SignInWithPhoneNumberResponse>;\r\nexport declare function linkWithPhoneNumber(auth: Auth, request: LinkWithPhoneNumberRequest): Promise<SignInWithPhoneNumberResponse>;\r\nexport declare function verifyPhoneNumberForExisting(auth: Auth, request: SignInWithPhoneNumberRequest): Promise<SignInWithPhoneNumberResponse>;\r\n"}}

{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { _addTidIfNecessary, _performApiRequest, _performSignInRequest } from '../index';\r\nexport function signInWithPassword(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPassword\" /* Endpoint.SIGN_IN_WITH_PASSWORD */, _addTidIfNecessary(auth, request))];\r\n        });\r\n    });\r\n}\r\nfunction sendOobCode(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:sendOobCode\" /* Endpoint.SEND_OOB_CODE */, _addTidIfNecessary(auth, request))];\r\n        });\r\n    });\r\n}\r\nexport function sendEmailVerification(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, sendOobCode(auth, request)];\r\n        });\r\n    });\r\n}\r\nexport function sendPasswordResetEmail(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, sendOobCode(auth, request)];\r\n        });\r\n    });\r\n}\r\nexport function sendSignInLinkToEmail(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, sendOobCode(auth, request)];\r\n        });\r\n    });\r\n}\r\nexport function verifyAndChangeEmail(auth, request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, sendOobCode(auth, request)];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=email_and_password.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/public_types.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/api/index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/id_token.ts"],"map":"{\"version\":3,\"file\":\"email_and_password.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/api/authentication/email_and_password.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAIH,OAAO,EAKL,kBAAkB,EAClB,kBAAkB,EAClB,qBAAqB,EACtB,MAAM,UAAU,CAAC;AAkBlB,MAAM,UAAgB,kBAAkB,CACtC,IAAU,EACV,OAAkC;;;YAElC,sBAAO,qBAAqB,CAI1B,IAAI,wGAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,EAAC;;;CACH;AAoDD,SAAe,WAAW,CACxB,IAAU,EACV,OAA0B;;;YAE1B,sBAAO,kBAAkB,CACvB,IAAI,yFAGJ,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAClC,EAAC;;;CACH;AAED,MAAM,UAAgB,qBAAqB,CACzC,IAAU,EACV,OAA2B;;;YAE3B,sBAAO,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,EAAC;;;CACnC;AAED,MAAM,UAAgB,sBAAsB,CAC1C,IAAU,EACV,OAA6B;;;YAE7B,sBAAO,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,EAAC;;;CACnC;AAED,MAAM,UAAgB,qBAAqB,CACzC,IAAU,EACV,OAA2B;;;YAE3B,sBAAO,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,EAAC;;;CACnC;AAED,MAAM,UAAgB,oBAAoB,CACxC,IAAU,EACV,OAAoC;;;YAEpC,sBAAO,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,EAAC;;;CACnC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/api/authentication/email_and_password.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\r\nimport { RecaptchaClientType, RecaptchaVersion } from '../index';\r\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\r\nexport interface SignInWithPasswordRequest {\r\n    returnSecureToken?: boolean;\r\n    email: string;\r\n    password: string;\r\n    tenantId?: string;\r\n    captchaResponse?: string;\r\n    clientType?: RecaptchaClientType;\r\n    recaptchaVersion?: RecaptchaVersion;\r\n}\r\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\r\n    email: string;\r\n    displayName: string;\r\n}\r\nexport declare function signInWithPassword(auth: Auth, request: SignInWithPasswordRequest): Promise<SignInWithPasswordResponse>;\r\nexport interface GetOobCodeRequest {\r\n    email?: string;\r\n    continueUrl?: string;\r\n    iOSBundleId?: string;\r\n    iosAppStoreId?: string;\r\n    androidPackageName?: string;\r\n    androidInstallApp?: boolean;\r\n    androidMinimumVersionCode?: string;\r\n    canHandleCodeInApp?: boolean;\r\n    dynamicLinkDomain?: string;\r\n    tenantId?: string;\r\n    targetProjectid?: string;\r\n}\r\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\r\n    requestType: ActionCodeOperation.VERIFY_EMAIL;\r\n    idToken: IdToken;\r\n}\r\nexport interface PasswordResetRequest extends GetOobCodeRequest {\r\n    requestType: ActionCodeOperation.PASSWORD_RESET;\r\n    email: string;\r\n    captchaResp?: string;\r\n    clientType?: RecaptchaClientType;\r\n    recaptchaVersion?: RecaptchaVersion;\r\n}\r\nexport interface EmailSignInRequest extends GetOobCodeRequest {\r\n    requestType: ActionCodeOperation.EMAIL_SIGNIN;\r\n    email: string;\r\n    captchaResp?: string;\r\n    clientType?: RecaptchaClientType;\r\n    recaptchaVersion?: RecaptchaVersion;\r\n}\r\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\r\n    requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\r\n    idToken: IdToken;\r\n    newEmail: string;\r\n}\r\ninterface GetOobCodeResponse {\r\n    email: string;\r\n}\r\nexport interface VerifyEmailResponse extends GetOobCodeResponse {\r\n}\r\nexport interface PasswordResetResponse extends GetOobCodeResponse {\r\n}\r\nexport interface EmailSignInResponse extends GetOobCodeResponse {\r\n}\r\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {\r\n}\r\nexport declare function sendEmailVerification(auth: Auth, request: VerifyEmailRequest): Promise<VerifyEmailResponse>;\r\nexport declare function sendPasswordResetEmail(auth: Auth, request: PasswordResetRequest): Promise<PasswordResetResponse>;\r\nexport declare function sendSignInLinkToEmail(auth: Auth, request: EmailSignInRequest): Promise<EmailSignInResponse>;\r\nexport declare function verifyAndChangeEmail(auth: Auth, request: VerifyAndChangeEmailRequest): Promise<VerifyAndChangeEmailResponse>;\r\nexport {};\r\n"}}

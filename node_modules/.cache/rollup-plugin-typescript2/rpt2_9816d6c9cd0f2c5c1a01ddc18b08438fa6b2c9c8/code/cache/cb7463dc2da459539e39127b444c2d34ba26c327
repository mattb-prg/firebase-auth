{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { FirebaseError } from '@firebase/util';\r\nexport function _logoutIfInvalidated(user, promise, bypassAuthState) {\r\n    if (bypassAuthState === void 0) { bypassAuthState = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (bypassAuthState) {\r\n                        return [2 /*return*/, promise];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 6]);\r\n                    return [4 /*yield*/, promise];\r\n                case 2: return [2 /*return*/, _a.sent()];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(e_1 instanceof FirebaseError && isUserInvalidated(e_1))) return [3 /*break*/, 5];\r\n                    if (!(user.auth.currentUser === user)) return [3 /*break*/, 5];\r\n                    return [4 /*yield*/, user.auth.signOut()];\r\n                case 4:\r\n                    _a.sent();\r\n                    _a.label = 5;\r\n                case 5: throw e_1;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isUserInvalidated(_a) {\r\n    var code = _a.code;\r\n    return (code === \"auth/\".concat(\"user-disabled\" /* AuthErrorCode.USER_DISABLED */) ||\r\n        code === \"auth/\".concat(\"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */));\r\n}\r\n//# sourceMappingURL=invalidation.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/model/user.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/core/errors.ts"],"map":"{\"version\":3,\"file\":\"invalidation.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/user/invalidation.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAK/C,MAAM,UAAgB,oBAAoB,CACxC,IAAkB,EAClB,OAAmB,EACnB,eAAuB;IAAvB,gCAAA,EAAA,uBAAuB;;;;;;oBAEvB,IAAI,eAAe,EAAE;wBACnB,sBAAO,OAAO,EAAC;qBAChB;;;;oBAEQ,qBAAM,OAAO,EAAA;wBAApB,sBAAO,SAAa,EAAC;;;yBAEjB,CAAA,GAAC,YAAY,aAAa,IAAI,iBAAiB,CAAC,GAAC,CAAC,CAAA,EAAlD,wBAAkD;yBAChD,CAAA,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,IAAI,CAAA,EAA9B,wBAA8B;oBAChC,qBAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAA;;oBAAzB,SAAyB,CAAC;;wBAI9B,MAAM,GAAC,CAAC;;;;;CAEX;AAED,SAAS,iBAAiB,CAAC,EAAuB;QAArB,IAAI,UAAA;IAC/B,OAAO,CACL,IAAI,KAAK,iEAAqC;QAC9C,IAAI,KAAK,sEAAqC,CAC/C,CAAC;AACJ,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/user/invalidation.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { UserInternal } from '../../model/user';\r\nexport declare function _logoutIfInvalidated<T>(user: UserInternal, promise: Promise<T>, bypassAuthState?: boolean): Promise<T>;\r\n"}}

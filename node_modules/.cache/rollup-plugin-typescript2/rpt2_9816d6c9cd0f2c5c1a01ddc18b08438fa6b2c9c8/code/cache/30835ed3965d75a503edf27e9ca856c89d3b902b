{"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Lazy accessor for window, since the compat layer won't tree shake this out,\r\n * we need to make sure not to mess with window unless we have to\r\n */\r\nexport function _window() {\r\n    return window;\r\n}\r\nexport function _setWindowLocation(url) {\r\n    _window().location.href = url;\r\n}\r\n//# sourceMappingURL=auth_window.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/src/platform_browser/recaptcha/recaptcha.ts"],"map":"{\"version\":3,\"file\":\"auth_window.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/platform_browser/auth_window.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAwBH;;;GAGG;AACH,MAAM,UAAU,OAAO;IACrB,OAAO,MAA+B,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,GAAW;IAC5C,OAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;AAChC,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/auth/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/platform_browser/auth_window.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Recaptcha, GreCAPTCHATopLevel } from './recaptcha/recaptcha';\r\n/**\r\n * A specialized window type that melds the normal window type plus the\r\n * various bits we need. The three different blocks that are &'d together\r\n * cant be defined in the same block together.\r\n */\r\nexport declare type AuthWindow = {\r\n    [T in keyof Window]: Window[T];\r\n} & {\r\n    grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\r\n    ___jsl?: Record<string, any>;\r\n    gapi?: typeof gapi;\r\n} & {\r\n    [callback: string]: (...args: unknown[]) => void;\r\n};\r\n/**\r\n * Lazy accessor for window, since the compat layer won't tree shake this out,\r\n * we need to make sure not to mess with window unless we have to\r\n */\r\nexport declare function _window(): AuthWindow;\r\nexport declare function _setWindowLocation(url: string): void;\r\n"}}
